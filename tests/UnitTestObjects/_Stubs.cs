//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: Sooda.SoodaObjectsAssembly(typeof(Sooda.UnitTests.Objects._DatabaseSchema))]

namespace Sooda.UnitTests.Objects {
  using System;
  using System.Collections;
  using System.Diagnostics;
  using System.Data;
  using Sooda;
  using SoodaUnitTestsObjectsStubs = Sooda.UnitTests.Objects.Stubs;
  using Sooda.UnitTests.BaseObjects;
  using Sooda.UnitTests.BaseObjects.Interfaces;
  
  public class SuperBikeList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<SuperBike> {
    public SuperBikeList() {
    }
    public SuperBikeList(ISoodaObjectList list) : 
        base(list) {
    }
    public SuperBikeList Sort(IComparer comparer) {
      return new SuperBikeList(base.Sort2(comparer));
    }
    public SuperBikeList Sort(string sortOrder) {
      return new SuperBikeList(base.Sort2(sortOrder));
    }
    public SuperBikeList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new SuperBikeList(base.Sort2(sortExpression));
    }
    public SuperBikeList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new SuperBikeList(base.Sort2(sortExpression, sortOrder));
    }
    public SuperBikeList SelectFirst(int count) {
      return new SuperBikeList(base.SelectFirst2(count));
    }
    public SuperBikeList SelectLast(int count) {
      return new SuperBikeList(base.SelectLast2(count));
    }
    public SuperBikeList SelectRange(int _from, int _to) {
      return new SuperBikeList(base.SelectRange2(_from, _to));
    }
    public SuperBikeList Filter(SoodaObjectFilter f) {
      return new SuperBikeList(base.Filter2(f));
    }
    public SuperBikeList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new SuperBikeList(base.Filter2(sortExpression));
    }
    public SuperBikeList Filter(SoodaWhereClause whereClause) {
      return new SuperBikeList(base.Filter2(whereClause));
    }
    public SuperBikeList GetSnapshot() {
      return new SuperBikeList(base.GetSnapshot2());
    }
  }
  public class MegaSuperBikeList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<MegaSuperBike> {
    public MegaSuperBikeList() {
    }
    public MegaSuperBikeList(ISoodaObjectList list) : 
        base(list) {
    }
    public MegaSuperBikeList Sort(IComparer comparer) {
      return new MegaSuperBikeList(base.Sort2(comparer));
    }
    public MegaSuperBikeList Sort(string sortOrder) {
      return new MegaSuperBikeList(base.Sort2(sortOrder));
    }
    public MegaSuperBikeList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new MegaSuperBikeList(base.Sort2(sortExpression));
    }
    public MegaSuperBikeList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new MegaSuperBikeList(base.Sort2(sortExpression, sortOrder));
    }
    public MegaSuperBikeList SelectFirst(int count) {
      return new MegaSuperBikeList(base.SelectFirst2(count));
    }
    public MegaSuperBikeList SelectLast(int count) {
      return new MegaSuperBikeList(base.SelectLast2(count));
    }
    public MegaSuperBikeList SelectRange(int _from, int _to) {
      return new MegaSuperBikeList(base.SelectRange2(_from, _to));
    }
    public MegaSuperBikeList Filter(SoodaObjectFilter f) {
      return new MegaSuperBikeList(base.Filter2(f));
    }
    public MegaSuperBikeList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new MegaSuperBikeList(base.Filter2(sortExpression));
    }
    public MegaSuperBikeList Filter(SoodaWhereClause whereClause) {
      return new MegaSuperBikeList(base.Filter2(whereClause));
    }
    public MegaSuperBikeList GetSnapshot() {
      return new MegaSuperBikeList(base.GetSnapshot2());
    }
  }
  public class AbstractMegaSuperBikeList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<AbstractMegaSuperBike> {
    public AbstractMegaSuperBikeList() {
    }
    public AbstractMegaSuperBikeList(ISoodaObjectList list) : 
        base(list) {
    }
    public AbstractMegaSuperBikeList Sort(IComparer comparer) {
      return new AbstractMegaSuperBikeList(base.Sort2(comparer));
    }
    public AbstractMegaSuperBikeList Sort(string sortOrder) {
      return new AbstractMegaSuperBikeList(base.Sort2(sortOrder));
    }
    public AbstractMegaSuperBikeList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new AbstractMegaSuperBikeList(base.Sort2(sortExpression));
    }
    public AbstractMegaSuperBikeList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new AbstractMegaSuperBikeList(base.Sort2(sortExpression, sortOrder));
    }
    public AbstractMegaSuperBikeList SelectFirst(int count) {
      return new AbstractMegaSuperBikeList(base.SelectFirst2(count));
    }
    public AbstractMegaSuperBikeList SelectLast(int count) {
      return new AbstractMegaSuperBikeList(base.SelectLast2(count));
    }
    public AbstractMegaSuperBikeList SelectRange(int _from, int _to) {
      return new AbstractMegaSuperBikeList(base.SelectRange2(_from, _to));
    }
    public AbstractMegaSuperBikeList Filter(SoodaObjectFilter f) {
      return new AbstractMegaSuperBikeList(base.Filter2(f));
    }
    public AbstractMegaSuperBikeList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new AbstractMegaSuperBikeList(base.Filter2(sortExpression));
    }
    public AbstractMegaSuperBikeList Filter(SoodaWhereClause whereClause) {
      return new AbstractMegaSuperBikeList(base.Filter2(whereClause));
    }
    public AbstractMegaSuperBikeList GetSnapshot() {
      return new AbstractMegaSuperBikeList(base.GetSnapshot2());
    }
  }
  public class ConcreteMegaSuperBikeAList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<ConcreteMegaSuperBikeA> {
    public ConcreteMegaSuperBikeAList() {
    }
    public ConcreteMegaSuperBikeAList(ISoodaObjectList list) : 
        base(list) {
    }
    public ConcreteMegaSuperBikeAList Sort(IComparer comparer) {
      return new ConcreteMegaSuperBikeAList(base.Sort2(comparer));
    }
    public ConcreteMegaSuperBikeAList Sort(string sortOrder) {
      return new ConcreteMegaSuperBikeAList(base.Sort2(sortOrder));
    }
    public ConcreteMegaSuperBikeAList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new ConcreteMegaSuperBikeAList(base.Sort2(sortExpression));
    }
    public ConcreteMegaSuperBikeAList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new ConcreteMegaSuperBikeAList(base.Sort2(sortExpression, sortOrder));
    }
    public ConcreteMegaSuperBikeAList SelectFirst(int count) {
      return new ConcreteMegaSuperBikeAList(base.SelectFirst2(count));
    }
    public ConcreteMegaSuperBikeAList SelectLast(int count) {
      return new ConcreteMegaSuperBikeAList(base.SelectLast2(count));
    }
    public ConcreteMegaSuperBikeAList SelectRange(int _from, int _to) {
      return new ConcreteMegaSuperBikeAList(base.SelectRange2(_from, _to));
    }
    public ConcreteMegaSuperBikeAList Filter(SoodaObjectFilter f) {
      return new ConcreteMegaSuperBikeAList(base.Filter2(f));
    }
    public ConcreteMegaSuperBikeAList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new ConcreteMegaSuperBikeAList(base.Filter2(sortExpression));
    }
    public ConcreteMegaSuperBikeAList Filter(SoodaWhereClause whereClause) {
      return new ConcreteMegaSuperBikeAList(base.Filter2(whereClause));
    }
    public ConcreteMegaSuperBikeAList GetSnapshot() {
      return new ConcreteMegaSuperBikeAList(base.GetSnapshot2());
    }
  }
  public class ConcreteMegaSuperBikeBList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<ConcreteMegaSuperBikeB> {
    public ConcreteMegaSuperBikeBList() {
    }
    public ConcreteMegaSuperBikeBList(ISoodaObjectList list) : 
        base(list) {
    }
    public ConcreteMegaSuperBikeBList Sort(IComparer comparer) {
      return new ConcreteMegaSuperBikeBList(base.Sort2(comparer));
    }
    public ConcreteMegaSuperBikeBList Sort(string sortOrder) {
      return new ConcreteMegaSuperBikeBList(base.Sort2(sortOrder));
    }
    public ConcreteMegaSuperBikeBList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new ConcreteMegaSuperBikeBList(base.Sort2(sortExpression));
    }
    public ConcreteMegaSuperBikeBList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new ConcreteMegaSuperBikeBList(base.Sort2(sortExpression, sortOrder));
    }
    public ConcreteMegaSuperBikeBList SelectFirst(int count) {
      return new ConcreteMegaSuperBikeBList(base.SelectFirst2(count));
    }
    public ConcreteMegaSuperBikeBList SelectLast(int count) {
      return new ConcreteMegaSuperBikeBList(base.SelectLast2(count));
    }
    public ConcreteMegaSuperBikeBList SelectRange(int _from, int _to) {
      return new ConcreteMegaSuperBikeBList(base.SelectRange2(_from, _to));
    }
    public ConcreteMegaSuperBikeBList Filter(SoodaObjectFilter f) {
      return new ConcreteMegaSuperBikeBList(base.Filter2(f));
    }
    public ConcreteMegaSuperBikeBList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new ConcreteMegaSuperBikeBList(base.Filter2(sortExpression));
    }
    public ConcreteMegaSuperBikeBList Filter(SoodaWhereClause whereClause) {
      return new ConcreteMegaSuperBikeBList(base.Filter2(whereClause));
    }
    public ConcreteMegaSuperBikeBList GetSnapshot() {
      return new ConcreteMegaSuperBikeBList(base.GetSnapshot2());
    }
  }
  public class ExtendedBikeList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<ExtendedBike> {
    public ExtendedBikeList() {
    }
    public ExtendedBikeList(ISoodaObjectList list) : 
        base(list) {
    }
    public ExtendedBikeList Sort(IComparer comparer) {
      return new ExtendedBikeList(base.Sort2(comparer));
    }
    public ExtendedBikeList Sort(string sortOrder) {
      return new ExtendedBikeList(base.Sort2(sortOrder));
    }
    public ExtendedBikeList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new ExtendedBikeList(base.Sort2(sortExpression));
    }
    public ExtendedBikeList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new ExtendedBikeList(base.Sort2(sortExpression, sortOrder));
    }
    public ExtendedBikeList SelectFirst(int count) {
      return new ExtendedBikeList(base.SelectFirst2(count));
    }
    public ExtendedBikeList SelectLast(int count) {
      return new ExtendedBikeList(base.SelectLast2(count));
    }
    public ExtendedBikeList SelectRange(int _from, int _to) {
      return new ExtendedBikeList(base.SelectRange2(_from, _to));
    }
    public ExtendedBikeList Filter(SoodaObjectFilter f) {
      return new ExtendedBikeList(base.Filter2(f));
    }
    public ExtendedBikeList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new ExtendedBikeList(base.Filter2(sortExpression));
    }
    public ExtendedBikeList Filter(SoodaWhereClause whereClause) {
      return new ExtendedBikeList(base.Filter2(whereClause));
    }
    public ExtendedBikeList GetSnapshot() {
      return new ExtendedBikeList(base.GetSnapshot2());
    }
  }
  public class VehicleMileageList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<VehicleMileage> {
    public VehicleMileageList() {
    }
    public VehicleMileageList(ISoodaObjectList list) : 
        base(list) {
    }
    public VehicleMileageList Sort(IComparer comparer) {
      return new VehicleMileageList(base.Sort2(comparer));
    }
    public VehicleMileageList Sort(string sortOrder) {
      return new VehicleMileageList(base.Sort2(sortOrder));
    }
    public VehicleMileageList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new VehicleMileageList(base.Sort2(sortExpression));
    }
    public VehicleMileageList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new VehicleMileageList(base.Sort2(sortExpression, sortOrder));
    }
    public VehicleMileageList SelectFirst(int count) {
      return new VehicleMileageList(base.SelectFirst2(count));
    }
    public VehicleMileageList SelectLast(int count) {
      return new VehicleMileageList(base.SelectLast2(count));
    }
    public VehicleMileageList SelectRange(int _from, int _to) {
      return new VehicleMileageList(base.SelectRange2(_from, _to));
    }
    public VehicleMileageList Filter(SoodaObjectFilter f) {
      return new VehicleMileageList(base.Filter2(f));
    }
    public VehicleMileageList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new VehicleMileageList(base.Filter2(sortExpression));
    }
    public VehicleMileageList Filter(SoodaWhereClause whereClause) {
      return new VehicleMileageList(base.Filter2(whereClause));
    }
    public VehicleMileageList GetSnapshot() {
      return new VehicleMileageList(base.GetSnapshot2());
    }
  }
  public class MileageItemList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<MileageItem> {
    public MileageItemList() {
    }
    public MileageItemList(ISoodaObjectList list) : 
        base(list) {
    }
    public MileageItemList Sort(IComparer comparer) {
      return new MileageItemList(base.Sort2(comparer));
    }
    public MileageItemList Sort(string sortOrder) {
      return new MileageItemList(base.Sort2(sortOrder));
    }
    public MileageItemList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new MileageItemList(base.Sort2(sortExpression));
    }
    public MileageItemList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new MileageItemList(base.Sort2(sortExpression, sortOrder));
    }
    public MileageItemList SelectFirst(int count) {
      return new MileageItemList(base.SelectFirst2(count));
    }
    public MileageItemList SelectLast(int count) {
      return new MileageItemList(base.SelectLast2(count));
    }
    public MileageItemList SelectRange(int _from, int _to) {
      return new MileageItemList(base.SelectRange2(_from, _to));
    }
    public MileageItemList Filter(SoodaObjectFilter f) {
      return new MileageItemList(base.Filter2(f));
    }
    public MileageItemList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new MileageItemList(base.Filter2(sortExpression));
    }
    public MileageItemList Filter(SoodaWhereClause whereClause) {
      return new MileageItemList(base.Filter2(whereClause));
    }
    public MileageItemList GetSnapshot() {
      return new MileageItemList(base.GetSnapshot2());
    }
  }
  public class AllDataTypesList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<AllDataTypes> {
    public AllDataTypesList() {
    }
    public AllDataTypesList(ISoodaObjectList list) : 
        base(list) {
    }
    public AllDataTypesList Sort(IComparer comparer) {
      return new AllDataTypesList(base.Sort2(comparer));
    }
    public AllDataTypesList Sort(string sortOrder) {
      return new AllDataTypesList(base.Sort2(sortOrder));
    }
    public AllDataTypesList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new AllDataTypesList(base.Sort2(sortExpression));
    }
    public AllDataTypesList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new AllDataTypesList(base.Sort2(sortExpression, sortOrder));
    }
    public AllDataTypesList SelectFirst(int count) {
      return new AllDataTypesList(base.SelectFirst2(count));
    }
    public AllDataTypesList SelectLast(int count) {
      return new AllDataTypesList(base.SelectLast2(count));
    }
    public AllDataTypesList SelectRange(int _from, int _to) {
      return new AllDataTypesList(base.SelectRange2(_from, _to));
    }
    public AllDataTypesList Filter(SoodaObjectFilter f) {
      return new AllDataTypesList(base.Filter2(f));
    }
    public AllDataTypesList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new AllDataTypesList(base.Filter2(sortExpression));
    }
    public AllDataTypesList Filter(SoodaWhereClause whereClause) {
      return new AllDataTypesList(base.Filter2(whereClause));
    }
    public AllDataTypesList GetSnapshot() {
      return new AllDataTypesList(base.GetSnapshot2());
    }
  }
  public class PKBoolList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<PKBool> {
    public PKBoolList() {
    }
    public PKBoolList(ISoodaObjectList list) : 
        base(list) {
    }
    public PKBoolList Sort(IComparer comparer) {
      return new PKBoolList(base.Sort2(comparer));
    }
    public PKBoolList Sort(string sortOrder) {
      return new PKBoolList(base.Sort2(sortOrder));
    }
    public PKBoolList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new PKBoolList(base.Sort2(sortExpression));
    }
    public PKBoolList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new PKBoolList(base.Sort2(sortExpression, sortOrder));
    }
    public PKBoolList SelectFirst(int count) {
      return new PKBoolList(base.SelectFirst2(count));
    }
    public PKBoolList SelectLast(int count) {
      return new PKBoolList(base.SelectLast2(count));
    }
    public PKBoolList SelectRange(int _from, int _to) {
      return new PKBoolList(base.SelectRange2(_from, _to));
    }
    public PKBoolList Filter(SoodaObjectFilter f) {
      return new PKBoolList(base.Filter2(f));
    }
    public PKBoolList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new PKBoolList(base.Filter2(sortExpression));
    }
    public PKBoolList Filter(SoodaWhereClause whereClause) {
      return new PKBoolList(base.Filter2(whereClause));
    }
    public PKBoolList GetSnapshot() {
      return new PKBoolList(base.GetSnapshot2());
    }
  }
  public class PKGuidList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<PKGuid> {
    public PKGuidList() {
    }
    public PKGuidList(ISoodaObjectList list) : 
        base(list) {
    }
    public PKGuidList Sort(IComparer comparer) {
      return new PKGuidList(base.Sort2(comparer));
    }
    public PKGuidList Sort(string sortOrder) {
      return new PKGuidList(base.Sort2(sortOrder));
    }
    public PKGuidList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new PKGuidList(base.Sort2(sortExpression));
    }
    public PKGuidList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new PKGuidList(base.Sort2(sortExpression, sortOrder));
    }
    public PKGuidList SelectFirst(int count) {
      return new PKGuidList(base.SelectFirst2(count));
    }
    public PKGuidList SelectLast(int count) {
      return new PKGuidList(base.SelectLast2(count));
    }
    public PKGuidList SelectRange(int _from, int _to) {
      return new PKGuidList(base.SelectRange2(_from, _to));
    }
    public PKGuidList Filter(SoodaObjectFilter f) {
      return new PKGuidList(base.Filter2(f));
    }
    public PKGuidList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new PKGuidList(base.Filter2(sortExpression));
    }
    public PKGuidList Filter(SoodaWhereClause whereClause) {
      return new PKGuidList(base.Filter2(whereClause));
    }
    public PKGuidList GetSnapshot() {
      return new PKGuidList(base.GetSnapshot2());
    }
  }
  public class PKDateTimeList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<PKDateTime> {
    public PKDateTimeList() {
    }
    public PKDateTimeList(ISoodaObjectList list) : 
        base(list) {
    }
    public PKDateTimeList Sort(IComparer comparer) {
      return new PKDateTimeList(base.Sort2(comparer));
    }
    public PKDateTimeList Sort(string sortOrder) {
      return new PKDateTimeList(base.Sort2(sortOrder));
    }
    public PKDateTimeList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new PKDateTimeList(base.Sort2(sortExpression));
    }
    public PKDateTimeList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new PKDateTimeList(base.Sort2(sortExpression, sortOrder));
    }
    public PKDateTimeList SelectFirst(int count) {
      return new PKDateTimeList(base.SelectFirst2(count));
    }
    public PKDateTimeList SelectLast(int count) {
      return new PKDateTimeList(base.SelectLast2(count));
    }
    public PKDateTimeList SelectRange(int _from, int _to) {
      return new PKDateTimeList(base.SelectRange2(_from, _to));
    }
    public PKDateTimeList Filter(SoodaObjectFilter f) {
      return new PKDateTimeList(base.Filter2(f));
    }
    public PKDateTimeList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new PKDateTimeList(base.Filter2(sortExpression));
    }
    public PKDateTimeList Filter(SoodaWhereClause whereClause) {
      return new PKDateTimeList(base.Filter2(whereClause));
    }
    public PKDateTimeList GetSnapshot() {
      return new PKDateTimeList(base.GetSnapshot2());
    }
  }
  public class PKInt32List : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<PKInt32> {
    public PKInt32List() {
    }
    public PKInt32List(ISoodaObjectList list) : 
        base(list) {
    }
    public PKInt32List Sort(IComparer comparer) {
      return new PKInt32List(base.Sort2(comparer));
    }
    public PKInt32List Sort(string sortOrder) {
      return new PKInt32List(base.Sort2(sortOrder));
    }
    public PKInt32List Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new PKInt32List(base.Sort2(sortExpression));
    }
    public PKInt32List Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new PKInt32List(base.Sort2(sortExpression, sortOrder));
    }
    public PKInt32List SelectFirst(int count) {
      return new PKInt32List(base.SelectFirst2(count));
    }
    public PKInt32List SelectLast(int count) {
      return new PKInt32List(base.SelectLast2(count));
    }
    public PKInt32List SelectRange(int _from, int _to) {
      return new PKInt32List(base.SelectRange2(_from, _to));
    }
    public PKInt32List Filter(SoodaObjectFilter f) {
      return new PKInt32List(base.Filter2(f));
    }
    public PKInt32List Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new PKInt32List(base.Filter2(sortExpression));
    }
    public PKInt32List Filter(SoodaWhereClause whereClause) {
      return new PKInt32List(base.Filter2(whereClause));
    }
    public PKInt32List GetSnapshot() {
      return new PKInt32List(base.GetSnapshot2());
    }
  }
  public class PKInt64List : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<PKInt64> {
    public PKInt64List() {
    }
    public PKInt64List(ISoodaObjectList list) : 
        base(list) {
    }
    public PKInt64List Sort(IComparer comparer) {
      return new PKInt64List(base.Sort2(comparer));
    }
    public PKInt64List Sort(string sortOrder) {
      return new PKInt64List(base.Sort2(sortOrder));
    }
    public PKInt64List Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new PKInt64List(base.Sort2(sortExpression));
    }
    public PKInt64List Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new PKInt64List(base.Sort2(sortExpression, sortOrder));
    }
    public PKInt64List SelectFirst(int count) {
      return new PKInt64List(base.SelectFirst2(count));
    }
    public PKInt64List SelectLast(int count) {
      return new PKInt64List(base.SelectLast2(count));
    }
    public PKInt64List SelectRange(int _from, int _to) {
      return new PKInt64List(base.SelectRange2(_from, _to));
    }
    public PKInt64List Filter(SoodaObjectFilter f) {
      return new PKInt64List(base.Filter2(f));
    }
    public PKInt64List Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new PKInt64List(base.Filter2(sortExpression));
    }
    public PKInt64List Filter(SoodaWhereClause whereClause) {
      return new PKInt64List(base.Filter2(whereClause));
    }
    public PKInt64List GetSnapshot() {
      return new PKInt64List(base.GetSnapshot2());
    }
  }
  public class PKStringList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<PKString> {
    public PKStringList() {
    }
    public PKStringList(ISoodaObjectList list) : 
        base(list) {
    }
    public PKStringList Sort(IComparer comparer) {
      return new PKStringList(base.Sort2(comparer));
    }
    public PKStringList Sort(string sortOrder) {
      return new PKStringList(base.Sort2(sortOrder));
    }
    public PKStringList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new PKStringList(base.Sort2(sortExpression));
    }
    public PKStringList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new PKStringList(base.Sort2(sortExpression, sortOrder));
    }
    public PKStringList SelectFirst(int count) {
      return new PKStringList(base.SelectFirst2(count));
    }
    public PKStringList SelectLast(int count) {
      return new PKStringList(base.SelectLast2(count));
    }
    public PKStringList SelectRange(int _from, int _to) {
      return new PKStringList(base.SelectRange2(_from, _to));
    }
    public PKStringList Filter(SoodaObjectFilter f) {
      return new PKStringList(base.Filter2(f));
    }
    public PKStringList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new PKStringList(base.Filter2(sortExpression));
    }
    public PKStringList Filter(SoodaWhereClause whereClause) {
      return new PKStringList(base.Filter2(whereClause));
    }
    public PKStringList GetSnapshot() {
      return new PKStringList(base.GetSnapshot2());
    }
  }
  public class MultiKeyList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<MultiKey> {
    public MultiKeyList() {
    }
    public MultiKeyList(ISoodaObjectList list) : 
        base(list) {
    }
    public MultiKeyList Sort(IComparer comparer) {
      return new MultiKeyList(base.Sort2(comparer));
    }
    public MultiKeyList Sort(string sortOrder) {
      return new MultiKeyList(base.Sort2(sortOrder));
    }
    public MultiKeyList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new MultiKeyList(base.Sort2(sortExpression));
    }
    public MultiKeyList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new MultiKeyList(base.Sort2(sortExpression, sortOrder));
    }
    public MultiKeyList SelectFirst(int count) {
      return new MultiKeyList(base.SelectFirst2(count));
    }
    public MultiKeyList SelectLast(int count) {
      return new MultiKeyList(base.SelectLast2(count));
    }
    public MultiKeyList SelectRange(int _from, int _to) {
      return new MultiKeyList(base.SelectRange2(_from, _to));
    }
    public MultiKeyList Filter(SoodaObjectFilter f) {
      return new MultiKeyList(base.Filter2(f));
    }
    public MultiKeyList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new MultiKeyList(base.Filter2(sortExpression));
    }
    public MultiKeyList Filter(SoodaWhereClause whereClause) {
      return new MultiKeyList(base.Filter2(whereClause));
    }
    public MultiKeyList GetSnapshot() {
      return new MultiKeyList(base.GetSnapshot2());
    }
  }
  public class EightFieldsList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<EightFields> {
    public EightFieldsList() {
    }
    public EightFieldsList(ISoodaObjectList list) : 
        base(list) {
    }
    public EightFieldsList Sort(IComparer comparer) {
      return new EightFieldsList(base.Sort2(comparer));
    }
    public EightFieldsList Sort(string sortOrder) {
      return new EightFieldsList(base.Sort2(sortOrder));
    }
    public EightFieldsList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new EightFieldsList(base.Sort2(sortExpression));
    }
    public EightFieldsList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new EightFieldsList(base.Sort2(sortExpression, sortOrder));
    }
    public EightFieldsList SelectFirst(int count) {
      return new EightFieldsList(base.SelectFirst2(count));
    }
    public EightFieldsList SelectLast(int count) {
      return new EightFieldsList(base.SelectLast2(count));
    }
    public EightFieldsList SelectRange(int _from, int _to) {
      return new EightFieldsList(base.SelectRange2(_from, _to));
    }
    public EightFieldsList Filter(SoodaObjectFilter f) {
      return new EightFieldsList(base.Filter2(f));
    }
    public EightFieldsList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new EightFieldsList(base.Filter2(sortExpression));
    }
    public EightFieldsList Filter(SoodaWhereClause whereClause) {
      return new EightFieldsList(base.Filter2(whereClause));
    }
    public EightFieldsList GetSnapshot() {
      return new EightFieldsList(base.GetSnapshot2());
    }
  }
}
namespace Sooda.UnitTests.Objects.Stubs {
  using System;
  using System.Collections;
  using System.Diagnostics;
  using System.Data;
  using Sooda;
  using Sooda.ObjectMapper;
  using SoodaUnitTestsObjects = Sooda.UnitTests.Objects;
  using Sooda.UnitTests.BaseObjects;
  using Sooda.UnitTests.BaseObjects.Stubs;
  using Sooda.UnitTests.BaseObjects.Interfaces;
  
  public abstract class SuperBike_Stub : Bike {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("Vehicle", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    public SuperBike_Stub(SoodaTransaction tran) : 
        base(tran) {
    }
    public SuperBike_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public new static System.Linq.IQueryable<SuperBike> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    private SoodaObjectFieldValues GetSuperBikeFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return SuperBike_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return SuperBike_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("SuperBike")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static SuperBikeList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new SuperBikeList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, SuperBike_Factory.TheClassInfo));
    }
    public new static SuperBike LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((SuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static SuperBike LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((SuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static SuperBike LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((SuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static SuperBike LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((SuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static SuperBikeList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static SuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static SuperBike Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public new static SuperBike Load(SoodaTransaction tran, int id) {
      SuperBike retVal = SuperBike_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public new static SuperBike GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static SuperBike TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public new static SuperBike GetRef(SoodaTransaction tran, int id) {
      return ((SuperBike)(Sooda.SoodaObject.GetRefHelper(tran, SuperBike_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static SuperBike TryGet(SoodaTransaction tran, int id) {
      return ((SuperBike)(tran.FindObjectWithKey("SuperBike", id, typeof(SuperBike))));
    }
    public new static SuperBike GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((SuperBike)(Sooda.SoodaObject.GetRefHelper(tran, SuperBike_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static SuperBike TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((SuperBike)(tran.FindObjectWithKey("SuperBike", tuple, typeof(SuperBike))));
    }
    public new static System.Linq.IQueryable<SuperBike> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public new static System.Linq.IQueryable<SuperBike> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public new static System.Linq.IQueryable<SuperBike> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<SuperBike>(tran, SuperBike_Factory.TheClassInfo, options);
    }
  }
  public abstract class MegaSuperBike_Stub : SuperBike {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("Vehicle", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    public MegaSuperBike_Stub(SoodaTransaction tran) : 
        base(tran) {
    }
    public MegaSuperBike_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public new static System.Linq.IQueryable<MegaSuperBike> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    private SoodaObjectFieldValues GetMegaSuperBikeFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return MegaSuperBike_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return MegaSuperBike_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("MegaSuperBike")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static MegaSuperBikeList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new MegaSuperBikeList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, MegaSuperBike_Factory.TheClassInfo));
    }
    public new static MegaSuperBike LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((MegaSuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static MegaSuperBike LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((MegaSuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static MegaSuperBike LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((MegaSuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static MegaSuperBike LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((MegaSuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static MegaSuperBikeList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static MegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static MegaSuperBike Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public new static MegaSuperBike Load(SoodaTransaction tran, int id) {
      MegaSuperBike retVal = MegaSuperBike_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public new static MegaSuperBike GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static MegaSuperBike TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public new static MegaSuperBike GetRef(SoodaTransaction tran, int id) {
      return ((MegaSuperBike)(Sooda.SoodaObject.GetRefHelper(tran, MegaSuperBike_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static MegaSuperBike TryGet(SoodaTransaction tran, int id) {
      return ((MegaSuperBike)(tran.FindObjectWithKey("MegaSuperBike", id, typeof(MegaSuperBike))));
    }
    public new static MegaSuperBike GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((MegaSuperBike)(Sooda.SoodaObject.GetRefHelper(tran, MegaSuperBike_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static MegaSuperBike TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((MegaSuperBike)(tran.FindObjectWithKey("MegaSuperBike", tuple, typeof(MegaSuperBike))));
    }
    public new static System.Linq.IQueryable<MegaSuperBike> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public new static System.Linq.IQueryable<MegaSuperBike> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public new static System.Linq.IQueryable<MegaSuperBike> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<MegaSuperBike>(tran, MegaSuperBike_Factory.TheClassInfo, options);
    }
  }
  public abstract class AbstractMegaSuperBike_Stub : MegaSuperBike {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("Vehicle", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    public AbstractMegaSuperBike_Stub(SoodaTransaction tran) : 
        base(tran) {
    }
    public AbstractMegaSuperBike_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public new static System.Linq.IQueryable<AbstractMegaSuperBike> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    private SoodaObjectFieldValues GetAbstractMegaSuperBikeFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return AbstractMegaSuperBike_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return AbstractMegaSuperBike_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("AbstractMegaSuperBike")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static AbstractMegaSuperBikeList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new AbstractMegaSuperBikeList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, AbstractMegaSuperBike_Factory.TheClassInfo));
    }
    public new static AbstractMegaSuperBike LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((AbstractMegaSuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static AbstractMegaSuperBike LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((AbstractMegaSuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static AbstractMegaSuperBike LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((AbstractMegaSuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static AbstractMegaSuperBike LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((AbstractMegaSuperBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static AbstractMegaSuperBikeList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static AbstractMegaSuperBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static AbstractMegaSuperBike Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public new static AbstractMegaSuperBike Load(SoodaTransaction tran, int id) {
      AbstractMegaSuperBike retVal = AbstractMegaSuperBike_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public new static AbstractMegaSuperBike GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static AbstractMegaSuperBike TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public new static AbstractMegaSuperBike GetRef(SoodaTransaction tran, int id) {
      return ((AbstractMegaSuperBike)(Sooda.SoodaObject.GetRefHelper(tran, AbstractMegaSuperBike_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static AbstractMegaSuperBike TryGet(SoodaTransaction tran, int id) {
      return ((AbstractMegaSuperBike)(tran.FindObjectWithKey("AbstractMegaSuperBike", id, typeof(AbstractMegaSuperBike))));
    }
    public new static AbstractMegaSuperBike GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((AbstractMegaSuperBike)(Sooda.SoodaObject.GetRefHelper(tran, AbstractMegaSuperBike_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static AbstractMegaSuperBike TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((AbstractMegaSuperBike)(tran.FindObjectWithKey("AbstractMegaSuperBike", tuple, typeof(AbstractMegaSuperBike))));
    }
    public new static System.Linq.IQueryable<AbstractMegaSuperBike> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public new static System.Linq.IQueryable<AbstractMegaSuperBike> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public new static System.Linq.IQueryable<AbstractMegaSuperBike> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<AbstractMegaSuperBike>(tran, AbstractMegaSuperBike_Factory.TheClassInfo, options);
    }
  }
  public abstract class ConcreteMegaSuperBikeA_Stub : AbstractMegaSuperBike {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("Vehicle", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    public ConcreteMegaSuperBikeA_Stub(SoodaTransaction tran) : 
        base(tran) {
    }
    public ConcreteMegaSuperBikeA_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public new static System.Linq.IQueryable<ConcreteMegaSuperBikeA> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    private SoodaObjectFieldValues GetConcreteMegaSuperBikeAFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return ConcreteMegaSuperBikeA_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return ConcreteMegaSuperBikeA_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("ConcreteMegaSuperBikeA")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static ConcreteMegaSuperBikeAList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new ConcreteMegaSuperBikeAList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, ConcreteMegaSuperBikeA_Factory.TheClassInfo));
    }
    public new static ConcreteMegaSuperBikeA LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((ConcreteMegaSuperBikeA)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ConcreteMegaSuperBikeA LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((ConcreteMegaSuperBikeA)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ConcreteMegaSuperBikeA LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((ConcreteMegaSuperBikeA)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ConcreteMegaSuperBikeA LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((ConcreteMegaSuperBikeA)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ConcreteMegaSuperBikeAList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeAList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeA Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public new static ConcreteMegaSuperBikeA Load(SoodaTransaction tran, int id) {
      ConcreteMegaSuperBikeA retVal = ConcreteMegaSuperBikeA_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public new static ConcreteMegaSuperBikeA GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static ConcreteMegaSuperBikeA TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public new static ConcreteMegaSuperBikeA GetRef(SoodaTransaction tran, int id) {
      return ((ConcreteMegaSuperBikeA)(Sooda.SoodaObject.GetRefHelper(tran, ConcreteMegaSuperBikeA_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static ConcreteMegaSuperBikeA TryGet(SoodaTransaction tran, int id) {
      return ((ConcreteMegaSuperBikeA)(tran.FindObjectWithKey("ConcreteMegaSuperBikeA", id, typeof(ConcreteMegaSuperBikeA))));
    }
    public new static ConcreteMegaSuperBikeA GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((ConcreteMegaSuperBikeA)(Sooda.SoodaObject.GetRefHelper(tran, ConcreteMegaSuperBikeA_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static ConcreteMegaSuperBikeA TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((ConcreteMegaSuperBikeA)(tran.FindObjectWithKey("ConcreteMegaSuperBikeA", tuple, typeof(ConcreteMegaSuperBikeA))));
    }
    public new static System.Linq.IQueryable<ConcreteMegaSuperBikeA> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public new static System.Linq.IQueryable<ConcreteMegaSuperBikeA> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public new static System.Linq.IQueryable<ConcreteMegaSuperBikeA> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<ConcreteMegaSuperBikeA>(tran, ConcreteMegaSuperBikeA_Factory.TheClassInfo, options);
    }
  }
  public abstract class ConcreteMegaSuperBikeB_Stub : AbstractMegaSuperBike {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("Vehicle", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    public ConcreteMegaSuperBikeB_Stub(SoodaTransaction tran) : 
        base(tran) {
    }
    public ConcreteMegaSuperBikeB_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public new static System.Linq.IQueryable<ConcreteMegaSuperBikeB> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    private SoodaObjectFieldValues GetConcreteMegaSuperBikeBFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return ConcreteMegaSuperBikeB_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return ConcreteMegaSuperBikeB_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("ConcreteMegaSuperBikeB")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static ConcreteMegaSuperBikeBList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new ConcreteMegaSuperBikeBList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, ConcreteMegaSuperBikeB_Factory.TheClassInfo));
    }
    public new static ConcreteMegaSuperBikeB LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((ConcreteMegaSuperBikeB)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ConcreteMegaSuperBikeB LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((ConcreteMegaSuperBikeB)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ConcreteMegaSuperBikeB LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((ConcreteMegaSuperBikeB)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ConcreteMegaSuperBikeB LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((ConcreteMegaSuperBikeB)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ConcreteMegaSuperBikeBList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ConcreteMegaSuperBikeBList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static ConcreteMegaSuperBikeB Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public new static ConcreteMegaSuperBikeB Load(SoodaTransaction tran, int id) {
      ConcreteMegaSuperBikeB retVal = ConcreteMegaSuperBikeB_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public new static ConcreteMegaSuperBikeB GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static ConcreteMegaSuperBikeB TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public new static ConcreteMegaSuperBikeB GetRef(SoodaTransaction tran, int id) {
      return ((ConcreteMegaSuperBikeB)(Sooda.SoodaObject.GetRefHelper(tran, ConcreteMegaSuperBikeB_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static ConcreteMegaSuperBikeB TryGet(SoodaTransaction tran, int id) {
      return ((ConcreteMegaSuperBikeB)(tran.FindObjectWithKey("ConcreteMegaSuperBikeB", id, typeof(ConcreteMegaSuperBikeB))));
    }
    public new static ConcreteMegaSuperBikeB GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((ConcreteMegaSuperBikeB)(Sooda.SoodaObject.GetRefHelper(tran, ConcreteMegaSuperBikeB_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static ConcreteMegaSuperBikeB TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((ConcreteMegaSuperBikeB)(tran.FindObjectWithKey("ConcreteMegaSuperBikeB", tuple, typeof(ConcreteMegaSuperBikeB))));
    }
    public new static System.Linq.IQueryable<ConcreteMegaSuperBikeB> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public new static System.Linq.IQueryable<ConcreteMegaSuperBikeB> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public new static System.Linq.IQueryable<ConcreteMegaSuperBikeB> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<ConcreteMegaSuperBikeB>(tran, ConcreteMegaSuperBikeB_Factory.TheClassInfo, options);
    }
  }
  public abstract class ExtendedBike_Stub : Bike {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("Vehicle", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    public ExtendedBike_Stub(SoodaTransaction tran) : 
        base(tran) {
    }
    public ExtendedBike_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public new static System.Linq.IQueryable<ExtendedBike> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public string ExtendedBikeInfo {
      get {
        return ((string)(this.GetExtendedBikeFieldValuesForRead(2).GetBoxedFieldValue(7)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 2, "ExtendedBikeInfo", 7, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_ExtendedBikeInfo), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_ExtendedBikeInfo));
      }
    }
    private SoodaObjectFieldValues GetExtendedBikeFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return ExtendedBike_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return ExtendedBike_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("ExtendedBike")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static ExtendedBikeList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new ExtendedBikeList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, ExtendedBike_Factory.TheClassInfo));
    }
    public new static ExtendedBike LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((ExtendedBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ExtendedBike LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((ExtendedBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ExtendedBike LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((ExtendedBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ExtendedBike LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((ExtendedBike)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public new static ExtendedBikeList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public new static ExtendedBikeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public new static ExtendedBike Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public new static ExtendedBike Load(SoodaTransaction tran, int id) {
      ExtendedBike retVal = ExtendedBike_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public new static ExtendedBike GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static ExtendedBike TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public new static ExtendedBike GetRef(SoodaTransaction tran, int id) {
      return ((ExtendedBike)(Sooda.SoodaObject.GetRefHelper(tran, ExtendedBike_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static ExtendedBike TryGet(SoodaTransaction tran, int id) {
      return ((ExtendedBike)(tran.FindObjectWithKey("ExtendedBike", id, typeof(ExtendedBike))));
    }
    public new static ExtendedBike GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((ExtendedBike)(Sooda.SoodaObject.GetRefHelper(tran, ExtendedBike_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public new static ExtendedBike TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((ExtendedBike)(tran.FindObjectWithKey("ExtendedBike", tuple, typeof(ExtendedBike))));
    }
    public new static System.Linq.IQueryable<ExtendedBike> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public new static System.Linq.IQueryable<ExtendedBike> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public new static System.Linq.IQueryable<ExtendedBike> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<ExtendedBike>(tran, ExtendedBike_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_ExtendedBikeInfo(object oldValue, object newValue) {
      this.BeforeFieldUpdate("ExtendedBikeInfo", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_ExtendedBikeInfo(object oldValue, object newValue) {
      this.AfterFieldUpdate("ExtendedBikeInfo", oldValue, newValue);
    }
  }
  public abstract class VehicleMileage_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("VehicleMileage", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    private MileageItemList _collectionCache_Items = null;
    private static Sooda.SoodaWhereClause _collectionWhere_Items = null;
    public VehicleMileage_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public VehicleMileage_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<VehicleMileage> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public int Id {
      get {
        return ((int)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    public int Total {
      get {
        return ((int)(this.GetVehicleMileageFieldValuesForRead(0).GetBoxedFieldValue(1)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Total", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Total), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Total));
      }
    }
    public MileageItemList Items {
      get {
        if ((this._collectionCache_Items == null)) {
          this._collectionCache_Items = new Sooda.UnitTests.Objects.MileageItemList(new Sooda.ObjectMapper.SoodaObjectOneToManyCollection(this.GetTransaction(), typeof(MileageItem), this, "VehicleMileage", MileageItem_Factory.TheClassInfo, _collectionWhere_Items, false));
        }
        return this._collectionCache_Items;
      }
    }
    public System.Linq.IQueryable<MileageItem> ItemsQuery {
      get {
        return new Sooda.Linq.SoodaQuerySource<MileageItem>(this.GetTransaction(), MileageItem_Factory.TheClassInfo, Sooda.QL.Soql.FieldEquals("VehicleMileage", this));
      }
    }
    private SoodaObjectFieldValues GetVehicleMileageFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return VehicleMileage_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return VehicleMileage_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("VehicleMileage")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static VehicleMileageList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new VehicleMileageList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, VehicleMileage_Factory.TheClassInfo));
    }
    public static VehicleMileage LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((VehicleMileage)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static VehicleMileage LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((VehicleMileage)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static VehicleMileage LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((VehicleMileage)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static VehicleMileage LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((VehicleMileage)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static VehicleMileageList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static VehicleMileageList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static VehicleMileage Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static VehicleMileage Load(SoodaTransaction tran, int id) {
      VehicleMileage retVal = VehicleMileage_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static VehicleMileage GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static VehicleMileage TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static VehicleMileage GetRef(SoodaTransaction tran, int id) {
      return ((VehicleMileage)(Sooda.SoodaObject.GetRefHelper(tran, VehicleMileage_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static VehicleMileage TryGet(SoodaTransaction tran, int id) {
      return ((VehicleMileage)(tran.FindObjectWithKey("VehicleMileage", id, typeof(VehicleMileage))));
    }
    public static VehicleMileage GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((VehicleMileage)(Sooda.SoodaObject.GetRefHelper(tran, VehicleMileage_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static VehicleMileage TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((VehicleMileage)(tran.FindObjectWithKey("VehicleMileage", tuple, typeof(VehicleMileage))));
    }
    public static System.Linq.IQueryable<VehicleMileage> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<VehicleMileage> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<VehicleMileage> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<VehicleMileage>(tran, VehicleMileage_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_Total(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Total", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Total(object oldValue, object newValue) {
      this.AfterFieldUpdate("Total", oldValue, newValue);
    }
  }
  public abstract class MileageItem_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("MileageItem", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    private SoodaObject[] _refcache = new Sooda.SoodaObject[1];
    public MileageItem_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public MileageItem_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<MileageItem> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public int Id {
      get {
        return ((int)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    public VehicleMileage VehicleMileage {
      get {
        if ((this._refcache[0] == null)) {
          object pk = this.GetMileageItemFieldValuesForRead(0).GetBoxedFieldValue(1);
          if ((pk != null)) {
            this._refcache[0] = Sooda.SoodaObject.GetRefHelper(this.GetTransaction(), VehicleMileage_Factory.TheFactory, pk);
          }
        }
        return ((VehicleMileage)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "VehicleMileage", 1, ((Sooda.SoodaObject)(value)), this._refcache, 0, VehicleMileage_Factory.TheFactory);
      }
    }
    public int Miles {
      get {
        return ((int)(this.GetMileageItemFieldValuesForRead(0).GetBoxedFieldValue(2)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Miles", 2, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Miles), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Miles));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(256)]
    public System.Data.SqlTypes.SqlString Description {
      get {
        return ((string)(this.GetMileageItemFieldValuesForRead(0).GetBoxedFieldValue(3)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Description", 3, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Description), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Description));
      }
    }
    private SoodaObjectFieldValues GetMileageItemFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return MileageItem_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return MileageItem_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("MileageItem")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static MileageItemList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new MileageItemList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, MileageItem_Factory.TheClassInfo));
    }
    public static MileageItem LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((MileageItem)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static MileageItem LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((MileageItem)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static MileageItem LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((MileageItem)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static MileageItem LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((MileageItem)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static MileageItemList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static MileageItemList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static MileageItemList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static MileageItemList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static MileageItemList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static MileageItemList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MileageItemList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static MileageItem Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static MileageItem Load(SoodaTransaction tran, int id) {
      MileageItem retVal = MileageItem_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static MileageItem GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static MileageItem TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static MileageItem GetRef(SoodaTransaction tran, int id) {
      return ((MileageItem)(Sooda.SoodaObject.GetRefHelper(tran, MileageItem_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static MileageItem TryGet(SoodaTransaction tran, int id) {
      return ((MileageItem)(tran.FindObjectWithKey("MileageItem", id, typeof(MileageItem))));
    }
    public static MileageItem GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((MileageItem)(Sooda.SoodaObject.GetRefHelper(tran, MileageItem_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static MileageItem TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((MileageItem)(tran.FindObjectWithKey("MileageItem", tuple, typeof(MileageItem))));
    }
    public static System.Linq.IQueryable<MileageItem> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<MileageItem> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<MileageItem> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<MileageItem>(tran, MileageItem_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_VehicleMileage(VehicleMileage oldValue, VehicleMileage newValue) {
      this.BeforeFieldUpdate("VehicleMileage", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_VehicleMileage(VehicleMileage oldValue, VehicleMileage newValue) {
      this.AfterFieldUpdate("VehicleMileage", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Miles(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Miles", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Miles(object oldValue, object newValue) {
      this.AfterFieldUpdate("Miles", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Description(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Description", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Description(object oldValue, object newValue) {
      this.AfterFieldUpdate("Description", oldValue, newValue);
    }
  }
  public abstract class AllDataTypes_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("AllDataTypes", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    public AllDataTypes_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public AllDataTypes_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<AllDataTypes> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public int Id {
      get {
        return ((int)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    public System.Data.SqlTypes.SqlBoolean BoolVal {
      get {
        return ((bool)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(1)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "BoolVal", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_BoolVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_BoolVal));
      }
    }
    public bool NnBoolVal {
      get {
        return ((bool)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(2)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NnBoolVal", 2, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NnBoolVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NnBoolVal));
      }
    }
    public System.Data.SqlTypes.SqlInt32 IntVal {
      get {
        return ((int)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(3)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "IntVal", 3, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_IntVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_IntVal));
      }
    }
    public int NnIntVal {
      get {
        return ((int)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(4)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NnIntVal", 4, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NnIntVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NnIntVal));
      }
    }
    public System.Data.SqlTypes.SqlInt64 Int64Val {
      get {
        return ((long)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(5)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Int64Val", 5, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Int64Val), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Int64Val));
      }
    }
    public long NnInt64Val {
      get {
        return ((long)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(6)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NnInt64Val", 6, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NnInt64Val), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NnInt64Val));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public System.Data.SqlTypes.SqlString StringVal {
      get {
        return ((string)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(7)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "StringVal", 7, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_StringVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_StringVal));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public string NnStringVal {
      get {
        return ((string)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(8)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NnStringVal", 8, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NnStringVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NnStringVal));
      }
    }
    public System.Data.SqlTypes.SqlDateTime DateVal {
      get {
        return ((System.DateTime)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(9)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "DateVal", 9, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_DateVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_DateVal));
      }
    }
    public System.DateTime NnDateVal {
      get {
        return ((System.DateTime)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(10)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NnDateVal", 10, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NnDateVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NnDateVal));
      }
    }
    public System.Data.SqlTypes.SqlSingle FloatVal {
      get {
        return ((float)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(11)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "FloatVal", 11, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_FloatVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_FloatVal));
      }
    }
    public float NnFloatVal {
      get {
        return ((float)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(12)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NnFloatVal", 12, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NnFloatVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NnFloatVal));
      }
    }
    public System.Data.SqlTypes.SqlDouble DoubleVal {
      get {
        return ((double)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(13)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "DoubleVal", 13, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_DoubleVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_DoubleVal));
      }
    }
    public double NnDoubleVal {
      get {
        return ((double)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(14)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NnDoubleVal", 14, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NnDoubleVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NnDoubleVal));
      }
    }
    public System.Data.SqlTypes.SqlDecimal DecimalVal {
      get {
        return ((decimal)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(15)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "DecimalVal", 15, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_DecimalVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_DecimalVal));
      }
    }
    public decimal NnDecimalVal {
      get {
        return ((decimal)(this.GetAllDataTypesFieldValuesForRead(0).GetBoxedFieldValue(16)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NnDecimalVal", 16, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NnDecimalVal), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NnDecimalVal));
      }
    }
    private SoodaObjectFieldValues GetAllDataTypesFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return AllDataTypes_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return AllDataTypes_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("AllDataTypes")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static AllDataTypesList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new AllDataTypesList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, AllDataTypes_Factory.TheClassInfo));
    }
    public static AllDataTypes LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((AllDataTypes)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static AllDataTypes LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((AllDataTypes)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static AllDataTypes LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((AllDataTypes)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static AllDataTypes LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((AllDataTypes)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static AllDataTypesList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static AllDataTypesList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static AllDataTypes Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static AllDataTypes Load(SoodaTransaction tran, int id) {
      AllDataTypes retVal = AllDataTypes_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static AllDataTypes GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static AllDataTypes TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static AllDataTypes GetRef(SoodaTransaction tran, int id) {
      return ((AllDataTypes)(Sooda.SoodaObject.GetRefHelper(tran, AllDataTypes_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static AllDataTypes TryGet(SoodaTransaction tran, int id) {
      return ((AllDataTypes)(tran.FindObjectWithKey("AllDataTypes", id, typeof(AllDataTypes))));
    }
    public static AllDataTypes GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((AllDataTypes)(Sooda.SoodaObject.GetRefHelper(tran, AllDataTypes_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static AllDataTypes TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((AllDataTypes)(tran.FindObjectWithKey("AllDataTypes", tuple, typeof(AllDataTypes))));
    }
    public static System.Linq.IQueryable<AllDataTypes> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<AllDataTypes> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<AllDataTypes> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<AllDataTypes>(tran, AllDataTypes_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_BoolVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("BoolVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_BoolVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("BoolVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NnBoolVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NnBoolVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NnBoolVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("NnBoolVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_IntVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("IntVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_IntVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("IntVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NnIntVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NnIntVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NnIntVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("NnIntVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Int64Val(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Int64Val", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Int64Val(object oldValue, object newValue) {
      this.AfterFieldUpdate("Int64Val", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NnInt64Val(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NnInt64Val", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NnInt64Val(object oldValue, object newValue) {
      this.AfterFieldUpdate("NnInt64Val", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_StringVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("StringVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_StringVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("StringVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NnStringVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NnStringVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NnStringVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("NnStringVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_DateVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("DateVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_DateVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("DateVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NnDateVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NnDateVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NnDateVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("NnDateVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_FloatVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("FloatVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_FloatVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("FloatVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NnFloatVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NnFloatVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NnFloatVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("NnFloatVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_DoubleVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("DoubleVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_DoubleVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("DoubleVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NnDoubleVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NnDoubleVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NnDoubleVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("NnDoubleVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_DecimalVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("DecimalVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_DecimalVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("DecimalVal", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NnDecimalVal(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NnDecimalVal", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NnDecimalVal(object oldValue, object newValue) {
      this.AfterFieldUpdate("NnDecimalVal", oldValue, newValue);
    }
  }
  public abstract class PKBool_Stub : SoodaObject {
    private SoodaObject[] _refcache = new Sooda.SoodaObject[1];
    private PKStringList _collectionCache_Parents = null;
    public PKBool_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public PKBool_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<PKBool> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public bool Id {
      get {
        return ((bool)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public System.Data.SqlTypes.SqlString Data {
      get {
        return ((string)(this.GetPKBoolFieldValuesForRead(0).GetBoxedFieldValue(1)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Data", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Data), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Data));
      }
    }
    public PKBool Parent {
      get {
        if ((this._refcache[0] == null)) {
          object pk = this.GetPKBoolFieldValuesForRead(0).GetBoxedFieldValue(2);
          if ((pk != null)) {
            this._refcache[0] = Sooda.SoodaObject.GetRefHelper(this.GetTransaction(), PKBool_Factory.TheFactory, pk);
          }
        }
        return ((PKBool)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Parent", 2, ((Sooda.SoodaObject)(value)), this._refcache, 0, PKBool_Factory.TheFactory);
      }
    }
    public PKStringList Parents {
      get {
        if ((this._collectionCache_Parents == null)) {
          this._collectionCache_Parents = new Sooda.UnitTests.Objects.PKStringList(new Sooda.ObjectMapper.SoodaObjectManyToManyCollection(this.GetTransaction(), 0, this.GetPrimaryKeyValue(), typeof(RelStringToBool_RelationTable), RelStringToBool_RelationTable.theRelationInfo));
        }
        return this._collectionCache_Parents;
      }
    }
    public System.Linq.IQueryable<PKString> ParentsQuery {
      get {
        return new Sooda.Linq.SoodaQuerySource<PKString>(this.GetTransaction(), PKString_Factory.TheClassInfo, Sooda.QL.Soql.CollectionFor(PKBool_Factory.TheClassInfo.FindCollectionManyToMany("Parents"), this));
      }
    }
    private SoodaObjectFieldValues GetPKBoolFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return PKBool_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return PKBool_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      this.RegisterObjectInTransaction();
    }
    private static PKBoolList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new PKBoolList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, PKBool_Factory.TheClassInfo));
    }
    public static PKBool LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKBool)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKBool LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((PKBool)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKBool LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKBool)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKBool LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((PKBool)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKBoolList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKBoolList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static PKBoolList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKBoolList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static PKBoolList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKBoolList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKBoolList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKBool Load(bool id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKBool Load(SoodaTransaction tran, bool id) {
      PKBool retVal = PKBool_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static PKBool GetRef(bool id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKBool TryGet(bool id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKBool GetRef(SoodaTransaction tran, bool id) {
      return ((PKBool)(Sooda.SoodaObject.GetRefHelper(tran, PKBool_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKBool TryGet(SoodaTransaction tran, bool id) {
      return ((PKBool)(tran.FindObjectWithKey("PKBool", id, typeof(PKBool))));
    }
    public static PKBool GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKBool)(Sooda.SoodaObject.GetRefHelper(tran, PKBool_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKBool TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKBool)(tran.FindObjectWithKey("PKBool", tuple, typeof(PKBool))));
    }
    public static System.Linq.IQueryable<PKBool> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<PKBool> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<PKBool> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<PKBool>(tran, PKBool_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_Data(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Data(object oldValue, object newValue) {
      this.AfterFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Parent(PKBool oldValue, PKBool newValue) {
      this.BeforeFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Parent(PKBool oldValue, PKBool newValue) {
      this.AfterFieldUpdate("Parent", oldValue, newValue);
    }
  }
  public abstract class PKGuid_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.GuidGenerator();
    private SoodaObject[] _refcache = new Sooda.SoodaObject[1];
    public PKGuid_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public PKGuid_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<PKGuid> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public System.Guid Id {
      get {
        return ((System.Guid)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public System.Data.SqlTypes.SqlString Data {
      get {
        return ((string)(this.GetPKGuidFieldValuesForRead(0).GetBoxedFieldValue(1)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Data", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Data), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Data));
      }
    }
    public PKGuid Parent {
      get {
        if ((this._refcache[0] == null)) {
          object pk = this.GetPKGuidFieldValuesForRead(0).GetBoxedFieldValue(2);
          if ((pk != null)) {
            this._refcache[0] = Sooda.SoodaObject.GetRefHelper(this.GetTransaction(), PKGuid_Factory.TheFactory, pk);
          }
        }
        return ((PKGuid)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Parent", 2, ((Sooda.SoodaObject)(value)), this._refcache, 0, PKGuid_Factory.TheFactory);
      }
    }
    private SoodaObjectFieldValues GetPKGuidFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return PKGuid_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return PKGuid_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("PKGuid")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static PKGuidList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new PKGuidList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, PKGuid_Factory.TheClassInfo));
    }
    public static PKGuid LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKGuid)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKGuid LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((PKGuid)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKGuid LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKGuid)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKGuid LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((PKGuid)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKGuidList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKGuidList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static PKGuidList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKGuidList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static PKGuidList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKGuidList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKGuidList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKGuid Load(System.Guid id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKGuid Load(SoodaTransaction tran, System.Guid id) {
      PKGuid retVal = PKGuid_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static PKGuid GetRef(System.Guid id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKGuid TryGet(System.Guid id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKGuid GetRef(SoodaTransaction tran, System.Guid id) {
      return ((PKGuid)(Sooda.SoodaObject.GetRefHelper(tran, PKGuid_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKGuid TryGet(SoodaTransaction tran, System.Guid id) {
      return ((PKGuid)(tran.FindObjectWithKey("PKGuid", id, typeof(PKGuid))));
    }
    public static PKGuid GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKGuid)(Sooda.SoodaObject.GetRefHelper(tran, PKGuid_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKGuid TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKGuid)(tran.FindObjectWithKey("PKGuid", tuple, typeof(PKGuid))));
    }
    public static System.Linq.IQueryable<PKGuid> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<PKGuid> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<PKGuid> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<PKGuid>(tran, PKGuid_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_Data(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Data(object oldValue, object newValue) {
      this.AfterFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Parent(PKGuid oldValue, PKGuid newValue) {
      this.BeforeFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Parent(PKGuid oldValue, PKGuid newValue) {
      this.AfterFieldUpdate("Parent", oldValue, newValue);
    }
  }
  public abstract class PKDateTime_Stub : SoodaObject {
    private SoodaObject[] _refcache = new Sooda.SoodaObject[1];
    private PKInt64List _collectionCache_Parents = null;
    public PKDateTime_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public PKDateTime_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<PKDateTime> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public System.DateTime Id {
      get {
        return ((System.DateTime)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public System.Data.SqlTypes.SqlString Data {
      get {
        return ((string)(this.GetPKDateTimeFieldValuesForRead(0).GetBoxedFieldValue(1)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Data", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Data), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Data));
      }
    }
    public PKDateTime Parent {
      get {
        if ((this._refcache[0] == null)) {
          object pk = this.GetPKDateTimeFieldValuesForRead(0).GetBoxedFieldValue(2);
          if ((pk != null)) {
            this._refcache[0] = Sooda.SoodaObject.GetRefHelper(this.GetTransaction(), PKDateTime_Factory.TheFactory, pk);
          }
        }
        return ((PKDateTime)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Parent", 2, ((Sooda.SoodaObject)(value)), this._refcache, 0, PKDateTime_Factory.TheFactory);
      }
    }
    public PKInt64List Parents {
      get {
        if ((this._collectionCache_Parents == null)) {
          this._collectionCache_Parents = new Sooda.UnitTests.Objects.PKInt64List(new Sooda.ObjectMapper.SoodaObjectManyToManyCollection(this.GetTransaction(), 0, this.GetPrimaryKeyValue(), typeof(RelInt64ToDateTime_RelationTable), RelInt64ToDateTime_RelationTable.theRelationInfo));
        }
        return this._collectionCache_Parents;
      }
    }
    public System.Linq.IQueryable<PKInt64> ParentsQuery {
      get {
        return new Sooda.Linq.SoodaQuerySource<PKInt64>(this.GetTransaction(), PKInt64_Factory.TheClassInfo, Sooda.QL.Soql.CollectionFor(PKDateTime_Factory.TheClassInfo.FindCollectionManyToMany("Parents"), this));
      }
    }
    private SoodaObjectFieldValues GetPKDateTimeFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return PKDateTime_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return PKDateTime_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      this.RegisterObjectInTransaction();
    }
    private static PKDateTimeList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new PKDateTimeList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, PKDateTime_Factory.TheClassInfo));
    }
    public static PKDateTime LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKDateTime)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKDateTime LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((PKDateTime)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKDateTime LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKDateTime)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKDateTime LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((PKDateTime)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKDateTimeList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKDateTimeList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKDateTime Load(System.DateTime id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKDateTime Load(SoodaTransaction tran, System.DateTime id) {
      PKDateTime retVal = PKDateTime_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static PKDateTime GetRef(System.DateTime id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKDateTime TryGet(System.DateTime id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKDateTime GetRef(SoodaTransaction tran, System.DateTime id) {
      return ((PKDateTime)(Sooda.SoodaObject.GetRefHelper(tran, PKDateTime_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKDateTime TryGet(SoodaTransaction tran, System.DateTime id) {
      return ((PKDateTime)(tran.FindObjectWithKey("PKDateTime", id, typeof(PKDateTime))));
    }
    public static PKDateTime GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKDateTime)(Sooda.SoodaObject.GetRefHelper(tran, PKDateTime_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKDateTime TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKDateTime)(tran.FindObjectWithKey("PKDateTime", tuple, typeof(PKDateTime))));
    }
    public static System.Linq.IQueryable<PKDateTime> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<PKDateTime> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<PKDateTime> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<PKDateTime>(tran, PKDateTime_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_Data(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Data(object oldValue, object newValue) {
      this.AfterFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Parent(PKDateTime oldValue, PKDateTime newValue) {
      this.BeforeFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Parent(PKDateTime oldValue, PKDateTime newValue) {
      this.AfterFieldUpdate("Parent", oldValue, newValue);
    }
  }
  public abstract class PKInt32_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("PKInt32", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    private SoodaObject[] _refcache = new Sooda.SoodaObject[1];
    private PKStringList _collectionCache_Children = null;
    public PKInt32_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public PKInt32_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<PKInt32> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public int Id {
      get {
        return ((int)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public System.Data.SqlTypes.SqlString Data {
      get {
        return ((string)(this.GetPKInt32FieldValuesForRead(0).GetBoxedFieldValue(1)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Data", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Data), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Data));
      }
    }
    public PKInt32 Parent {
      get {
        if ((this._refcache[0] == null)) {
          object pk = this.GetPKInt32FieldValuesForRead(0).GetBoxedFieldValue(2);
          if ((pk != null)) {
            this._refcache[0] = Sooda.SoodaObject.GetRefHelper(this.GetTransaction(), PKInt32_Factory.TheFactory, pk);
          }
        }
        return ((PKInt32)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Parent", 2, ((Sooda.SoodaObject)(value)), this._refcache, 0, PKInt32_Factory.TheFactory);
      }
    }
    public PKStringList Children {
      get {
        if ((this._collectionCache_Children == null)) {
          this._collectionCache_Children = new Sooda.UnitTests.Objects.PKStringList(new Sooda.ObjectMapper.SoodaObjectManyToManyCollection(this.GetTransaction(), 1, this.GetPrimaryKeyValue(), typeof(RelInt32ToString_RelationTable), RelInt32ToString_RelationTable.theRelationInfo));
        }
        return this._collectionCache_Children;
      }
    }
    public System.Linq.IQueryable<PKString> ChildrenQuery {
      get {
        return new Sooda.Linq.SoodaQuerySource<PKString>(this.GetTransaction(), PKString_Factory.TheClassInfo, Sooda.QL.Soql.CollectionFor(PKInt32_Factory.TheClassInfo.FindCollectionManyToMany("Children"), this));
      }
    }
    private SoodaObjectFieldValues GetPKInt32FieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return PKInt32_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return PKInt32_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("PKInt32")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static PKInt32List DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new PKInt32List(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, PKInt32_Factory.TheClassInfo));
    }
    public static PKInt32 LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKInt32)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKInt32 LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((PKInt32)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKInt32 LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKInt32)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKInt32 LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((PKInt32)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKInt32List GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKInt32List GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static PKInt32List GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKInt32List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static PKInt32List GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKInt32List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt32List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKInt32 Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKInt32 Load(SoodaTransaction tran, int id) {
      PKInt32 retVal = PKInt32_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static PKInt32 GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKInt32 TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKInt32 GetRef(SoodaTransaction tran, int id) {
      return ((PKInt32)(Sooda.SoodaObject.GetRefHelper(tran, PKInt32_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKInt32 TryGet(SoodaTransaction tran, int id) {
      return ((PKInt32)(tran.FindObjectWithKey("PKInt32", id, typeof(PKInt32))));
    }
    public static PKInt32 GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKInt32)(Sooda.SoodaObject.GetRefHelper(tran, PKInt32_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKInt32 TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKInt32)(tran.FindObjectWithKey("PKInt32", tuple, typeof(PKInt32))));
    }
    public static System.Linq.IQueryable<PKInt32> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<PKInt32> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<PKInt32> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<PKInt32>(tran, PKInt32_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_Data(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Data(object oldValue, object newValue) {
      this.AfterFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Parent(PKInt32 oldValue, PKInt32 newValue) {
      this.BeforeFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Parent(PKInt32 oldValue, PKInt32 newValue) {
      this.AfterFieldUpdate("Parent", oldValue, newValue);
    }
  }
  public abstract class PKInt64_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGeneratorBigint("PKInt64", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    private SoodaObject[] _refcache = new Sooda.SoodaObject[1];
    private PKDateTimeList _collectionCache_Children = null;
    public PKInt64_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public PKInt64_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<PKInt64> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public long Id {
      get {
        return ((long)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public System.Data.SqlTypes.SqlString Data {
      get {
        return ((string)(this.GetPKInt64FieldValuesForRead(0).GetBoxedFieldValue(1)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Data", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Data), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Data));
      }
    }
    public PKInt64 Parent {
      get {
        if ((this._refcache[0] == null)) {
          object pk = this.GetPKInt64FieldValuesForRead(0).GetBoxedFieldValue(2);
          if ((pk != null)) {
            this._refcache[0] = Sooda.SoodaObject.GetRefHelper(this.GetTransaction(), PKInt64_Factory.TheFactory, pk);
          }
        }
        return ((PKInt64)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Parent", 2, ((Sooda.SoodaObject)(value)), this._refcache, 0, PKInt64_Factory.TheFactory);
      }
    }
    public PKDateTimeList Children {
      get {
        if ((this._collectionCache_Children == null)) {
          this._collectionCache_Children = new Sooda.UnitTests.Objects.PKDateTimeList(new Sooda.ObjectMapper.SoodaObjectManyToManyCollection(this.GetTransaction(), 1, this.GetPrimaryKeyValue(), typeof(RelInt64ToDateTime_RelationTable), RelInt64ToDateTime_RelationTable.theRelationInfo));
        }
        return this._collectionCache_Children;
      }
    }
    public System.Linq.IQueryable<PKDateTime> ChildrenQuery {
      get {
        return new Sooda.Linq.SoodaQuerySource<PKDateTime>(this.GetTransaction(), PKDateTime_Factory.TheClassInfo, Sooda.QL.Soql.CollectionFor(PKInt64_Factory.TheClassInfo.FindCollectionManyToMany("Children"), this));
      }
    }
    private SoodaObjectFieldValues GetPKInt64FieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return PKInt64_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return PKInt64_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("PKInt64")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static PKInt64List DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new PKInt64List(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, PKInt64_Factory.TheClassInfo));
    }
    public static PKInt64 LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKInt64)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKInt64 LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((PKInt64)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKInt64 LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKInt64)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKInt64 LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((PKInt64)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKInt64List GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKInt64List GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static PKInt64List GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKInt64List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static PKInt64List GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKInt64List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKInt64List GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKInt64 Load(long id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKInt64 Load(SoodaTransaction tran, long id) {
      PKInt64 retVal = PKInt64_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static PKInt64 GetRef(long id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKInt64 TryGet(long id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKInt64 GetRef(SoodaTransaction tran, long id) {
      return ((PKInt64)(Sooda.SoodaObject.GetRefHelper(tran, PKInt64_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKInt64 TryGet(SoodaTransaction tran, long id) {
      return ((PKInt64)(tran.FindObjectWithKey("PKInt64", id, typeof(PKInt64))));
    }
    public static PKInt64 GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKInt64)(Sooda.SoodaObject.GetRefHelper(tran, PKInt64_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKInt64 TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKInt64)(tran.FindObjectWithKey("PKInt64", tuple, typeof(PKInt64))));
    }
    public static System.Linq.IQueryable<PKInt64> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<PKInt64> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<PKInt64> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<PKInt64>(tran, PKInt64_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_Data(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Data(object oldValue, object newValue) {
      this.AfterFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Parent(PKInt64 oldValue, PKInt64 newValue) {
      this.BeforeFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Parent(PKInt64 oldValue, PKInt64 newValue) {
      this.AfterFieldUpdate("Parent", oldValue, newValue);
    }
  }
  public abstract class PKString_Stub : SoodaObject {
    private SoodaObject[] _refcache = new Sooda.SoodaObject[1];
    private PKBoolList _collectionCache_Children = null;
    private PKInt32List _collectionCache_Parents = null;
    public PKString_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public PKString_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<PKString> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public string Id {
      get {
        return ((string)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public System.Data.SqlTypes.SqlString Data {
      get {
        return ((string)(this.GetPKStringFieldValuesForRead(0).GetBoxedFieldValue(1)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Data", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Data), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Data));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(64)]
    public PKString Parent {
      get {
        if ((this._refcache[0] == null)) {
          object pk = this.GetPKStringFieldValuesForRead(0).GetBoxedFieldValue(2);
          if ((pk != null)) {
            this._refcache[0] = Sooda.SoodaObject.GetRefHelper(this.GetTransaction(), PKString_Factory.TheFactory, pk);
          }
        }
        return ((PKString)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Parent", 2, ((Sooda.SoodaObject)(value)), this._refcache, 0, PKString_Factory.TheFactory);
      }
    }
    public PKBoolList Children {
      get {
        if ((this._collectionCache_Children == null)) {
          this._collectionCache_Children = new Sooda.UnitTests.Objects.PKBoolList(new Sooda.ObjectMapper.SoodaObjectManyToManyCollection(this.GetTransaction(), 1, this.GetPrimaryKeyValue(), typeof(RelStringToBool_RelationTable), RelStringToBool_RelationTable.theRelationInfo));
        }
        return this._collectionCache_Children;
      }
    }
    public System.Linq.IQueryable<PKBool> ChildrenQuery {
      get {
        return new Sooda.Linq.SoodaQuerySource<PKBool>(this.GetTransaction(), PKBool_Factory.TheClassInfo, Sooda.QL.Soql.CollectionFor(PKString_Factory.TheClassInfo.FindCollectionManyToMany("Children"), this));
      }
    }
    public PKInt32List Parents {
      get {
        if ((this._collectionCache_Parents == null)) {
          this._collectionCache_Parents = new Sooda.UnitTests.Objects.PKInt32List(new Sooda.ObjectMapper.SoodaObjectManyToManyCollection(this.GetTransaction(), 0, this.GetPrimaryKeyValue(), typeof(RelInt32ToString_RelationTable), RelInt32ToString_RelationTable.theRelationInfo));
        }
        return this._collectionCache_Parents;
      }
    }
    public System.Linq.IQueryable<PKInt32> ParentsQuery {
      get {
        return new Sooda.Linq.SoodaQuerySource<PKInt32>(this.GetTransaction(), PKInt32_Factory.TheClassInfo, Sooda.QL.Soql.CollectionFor(PKString_Factory.TheClassInfo.FindCollectionManyToMany("Parents"), this));
      }
    }
    private SoodaObjectFieldValues GetPKStringFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return PKString_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return PKString_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      this.RegisterObjectInTransaction();
    }
    private static PKStringList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new PKStringList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, PKString_Factory.TheClassInfo));
    }
    public static PKString LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKString)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKString LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((PKString)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKString LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((PKString)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKString LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((PKString)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static PKStringList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKStringList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static PKStringList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKStringList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static PKStringList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKStringList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static PKStringList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static PKString Load(string id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKString Load(SoodaTransaction tran, string id) {
      PKString retVal = PKString_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static PKString GetRef(string id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKString TryGet(string id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static PKString GetRef(SoodaTransaction tran, string id) {
      return ((PKString)(Sooda.SoodaObject.GetRefHelper(tran, PKString_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKString TryGet(SoodaTransaction tran, string id) {
      return ((PKString)(tran.FindObjectWithKey("PKString", id, typeof(PKString))));
    }
    public static PKString GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKString)(Sooda.SoodaObject.GetRefHelper(tran, PKString_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static PKString TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((PKString)(tran.FindObjectWithKey("PKString", tuple, typeof(PKString))));
    }
    public static System.Linq.IQueryable<PKString> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<PKString> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<PKString> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<PKString>(tran, PKString_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_Data(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Data(object oldValue, object newValue) {
      this.AfterFieldUpdate("Data", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Parent(PKString oldValue, PKString newValue) {
      this.BeforeFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Parent(PKString oldValue, PKString newValue) {
      this.AfterFieldUpdate("Parent", oldValue, newValue);
    }
  }
  public abstract class MultiKey_Stub : SoodaObject {
    public MultiKey_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public MultiKey_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<MultiKey> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public int Contact {
      get {
        return ((int)(Sooda.SoodaTuple.GetValue(this.GetPrimaryKeyValue(), 0)));
      }
      set {
        this.SetPrimaryKeySubValue(value, 0, 2);
      }
    }
    public int Group {
      get {
        return ((int)(Sooda.SoodaTuple.GetValue(this.GetPrimaryKeyValue(), 1)));
      }
      set {
        this.SetPrimaryKeySubValue(value, 1, 2);
      }
    }
    public int Value {
      get {
        return ((int)(this.GetMultiKeyFieldValuesForRead(0).GetBoxedFieldValue(2)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Value", 2, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Value), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Value));
      }
    }
    public int Value2 {
      get {
        return ((int)(this.GetMultiKeyFieldValuesForRead(1).GetBoxedFieldValue(3)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 1, "Value2", 3, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Value2), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Value2));
      }
    }
    public int Value3 {
      get {
        return ((int)(this.GetMultiKeyFieldValuesForRead(2).GetBoxedFieldValue(4)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 2, "Value3", 4, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Value3), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Value3));
      }
    }
    private SoodaObjectFieldValues GetMultiKeyFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return MultiKey_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return MultiKey_Factory.InternalGetFieldHandler(ordinal);
    }
    protected override void InitNewObject() {
      this.RegisterObjectInTransaction();
    }
    private static MultiKeyList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new MultiKeyList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, MultiKey_Factory.TheClassInfo));
    }
    public static MultiKey LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((MultiKey)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static MultiKey LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((MultiKey)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static MultiKey LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((MultiKey)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static MultiKey LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((MultiKey)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static MultiKeyList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static MultiKeyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static MultiKey Load(int contact, int group) {
      return Load(SoodaTransaction.ActiveTransaction, contact, group);
    }
    public static MultiKey Load(SoodaTransaction tran, int contact, int group) {
      MultiKey retVal = MultiKey_Stub.GetRef(tran, contact, group);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static MultiKey GetRef(int contact, int group) {
      return GetRef(SoodaTransaction.ActiveTransaction, contact, group);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static MultiKey TryGet(int contact, int group) {
      return TryGet(SoodaTransaction.ActiveTransaction, contact, group);
    }
    public static MultiKey GetRef(SoodaTransaction tran, int contact, int group) {
      return ((MultiKey)(Sooda.SoodaObject.GetRefHelper(tran, MultiKey_Factory.TheFactory, new SoodaTuple(contact, group))));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static MultiKey TryGet(SoodaTransaction tran, int contact, int group) {
      return ((MultiKey)(tran.FindObjectWithKey("MultiKey", new SoodaTuple(contact, group), typeof(MultiKey))));
    }
    public static MultiKey GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((MultiKey)(Sooda.SoodaObject.GetRefHelper(tran, MultiKey_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static MultiKey TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((MultiKey)(tran.FindObjectWithKey("MultiKey", tuple, typeof(MultiKey))));
    }
    public static System.Linq.IQueryable<MultiKey> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<MultiKey> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<MultiKey> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<MultiKey>(tran, MultiKey_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_Value(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Value", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Value(object oldValue, object newValue) {
      this.AfterFieldUpdate("Value", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Value2(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Value2", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Value2(object oldValue, object newValue) {
      this.AfterFieldUpdate("Value2", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Value3(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Value3", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Value3(object oldValue, object newValue) {
      this.AfterFieldUpdate("Value3", oldValue, newValue);
    }
  }
  public abstract class EightFields_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("EightFields", SoodaUnitTestsObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("default"));
    private SoodaObject[] _refcache = new Sooda.SoodaObject[1];
    public EightFields_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public EightFields_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public static System.Linq.IQueryable<EightFields> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public int Id {
      get {
        return ((int)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    public EightFields Parent {
      get {
        if ((this._refcache[0] == null)) {
          object pk = this.GetEightFieldsFieldValuesForRead(0).GetBoxedFieldValue(1);
          if ((pk != null)) {
            this._refcache[0] = Sooda.SoodaObject.GetRefHelper(this.GetTransaction(), EightFields_Factory.TheFactory, pk);
          }
        }
        return ((EightFields)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Parent", 1, ((Sooda.SoodaObject)(value)), this._refcache, 0, EightFields_Factory.TheFactory);
      }
    }
    public System.TimeSpan TimeSpan {
      get {
        return ((System.TimeSpan)(this.GetEightFieldsFieldValuesForRead(0).GetBoxedFieldValue(2)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "TimeSpan", 2, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_TimeSpan), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_TimeSpan));
      }
    }
    public System.TimeSpan NullableTimeSpan {
      get {
        return ((System.TimeSpan)(this.GetEightFieldsFieldValuesForRead(0).GetBoxedFieldValue(3)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NullableTimeSpan", 3, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NullableTimeSpan), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NullableTimeSpan));
      }
    }
    public System.Guid Guid {
      get {
        return ((System.Guid)(this.GetEightFieldsFieldValuesForRead(0).GetBoxedFieldValue(4)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Guid", 4, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Guid), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Guid));
      }
    }
    public System.Data.SqlTypes.SqlGuid NullableGuid {
      get {
        return ((System.Guid)(this.GetEightFieldsFieldValuesForRead(0).GetBoxedFieldValue(5)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NullableGuid", 5, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NullableGuid), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NullableGuid));
      }
    }
    public byte[] Blob {
      get {
        return ((byte[])(this.GetEightFieldsFieldValuesForRead(0).GetBoxedFieldValue(6)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Blob", 6, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Blob), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Blob));
      }
    }
    public System.Data.SqlTypes.SqlBinary NullableBlob {
      get {
        return ((byte[])(this.GetEightFieldsFieldValuesForRead(0).GetBoxedFieldValue(7)));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "NullableBlob", 7, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_NullableBlob), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_NullableBlob));
      }
    }
    private SoodaObjectFieldValues GetEightFieldsFieldValuesForRead(int requiredTable) {
      return Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable);
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new SoodaObjectArrayFieldValues(fieldCount);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return EightFields_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return EightFields_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      if (GetTransaction().IsKeyGeneratorDisabled("EightFields")) {
        return;
      }
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    private static EightFieldsList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return new EightFieldsList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, startIdx, pageCount, options, EightFields_Factory.TheClassInfo));
    }
    public static EightFields LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((EightFields)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static EightFields LoadSingleObject(Sooda.SoodaWhereClause where) {
      return ((EightFields)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static EightFields LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((EightFields)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static EightFields LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause where) {
      return ((EightFields)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(where, DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, 2, SoodaSnapshotOptions.Default))));
    }
    public static EightFieldsList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaWhereClause where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, -1, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy) {
      return DoGetList(tran, where, orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, -1, options);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, 0, topCount, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, where, orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, 0, topCount, options);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, where, orderBy, startIdx, pageCount, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, SoodaWhereClause where, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, where, orderBy, startIdx, pageCount, options);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, -1, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, -1, options);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 0, topCount, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, 0, topCount, options);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, startIdx, pageCount, options);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, SoodaSnapshotOptions.Default);
    }
    public static EightFieldsList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int startIdx, int pageCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, startIdx, pageCount, options);
    }
    public static EightFields Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static EightFields Load(SoodaTransaction tran, int id) {
      EightFields retVal = EightFields_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static EightFields GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static EightFields TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static EightFields GetRef(SoodaTransaction tran, int id) {
      return ((EightFields)(Sooda.SoodaObject.GetRefHelper(tran, EightFields_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static EightFields TryGet(SoodaTransaction tran, int id) {
      return ((EightFields)(tran.FindObjectWithKey("EightFields", id, typeof(EightFields))));
    }
    public static EightFields GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((EightFields)(Sooda.SoodaObject.GetRefHelper(tran, EightFields_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static EightFields TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((EightFields)(tran.FindObjectWithKey("EightFields", tuple, typeof(EightFields))));
    }
    public static System.Linq.IQueryable<EightFields> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<EightFields> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<EightFields> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<EightFields>(tran, EightFields_Factory.TheClassInfo, options);
    }
    protected virtual void BeforeFieldUpdate_Parent(EightFields oldValue, EightFields newValue) {
      this.BeforeFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Parent(EightFields oldValue, EightFields newValue) {
      this.AfterFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_TimeSpan(object oldValue, object newValue) {
      this.BeforeFieldUpdate("TimeSpan", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_TimeSpan(object oldValue, object newValue) {
      this.AfterFieldUpdate("TimeSpan", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NullableTimeSpan(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NullableTimeSpan", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NullableTimeSpan(object oldValue, object newValue) {
      this.AfterFieldUpdate("NullableTimeSpan", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Guid(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Guid", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Guid(object oldValue, object newValue) {
      this.AfterFieldUpdate("Guid", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NullableGuid(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NullableGuid", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NullableGuid(object oldValue, object newValue) {
      this.AfterFieldUpdate("NullableGuid", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Blob(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Blob", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Blob(object oldValue, object newValue) {
      this.AfterFieldUpdate("Blob", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_NullableBlob(object oldValue, object newValue) {
      this.BeforeFieldUpdate("NullableBlob", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_NullableBlob(object oldValue, object newValue) {
      this.AfterFieldUpdate("NullableBlob", oldValue, newValue);
    }
  }
  [SoodaObjectFactoryAttribute("SuperBike", typeof(SuperBike))]
  public class SuperBike_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static SuperBike_Factory _theFactory = new SuperBike_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("SuperBike");
    private static Type _theType = typeof(SuperBike);
    private SuperBike_Factory() {
    }
    public static SuperBike_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return SuperBike_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return SuperBike_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new SuperBike(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      SuperBike retVal = new SuperBike(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("MegaSuperBike", typeof(MegaSuperBike))]
  public class MegaSuperBike_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static MegaSuperBike_Factory _theFactory = new MegaSuperBike_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("MegaSuperBike");
    private static Type _theType = typeof(MegaSuperBike);
    private MegaSuperBike_Factory() {
    }
    public static MegaSuperBike_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return MegaSuperBike_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return MegaSuperBike_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new MegaSuperBike(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      MegaSuperBike retVal = new MegaSuperBike(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("AbstractMegaSuperBike", typeof(AbstractMegaSuperBike))]
  public class AbstractMegaSuperBike_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static AbstractMegaSuperBike_Factory _theFactory = new AbstractMegaSuperBike_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("AbstractMegaSuperBike");
    private static Type _theType = typeof(AbstractMegaSuperBike);
    private AbstractMegaSuperBike_Factory() {
    }
    public static AbstractMegaSuperBike_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return AbstractMegaSuperBike_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return AbstractMegaSuperBike_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      throw new NotSupportedException("Cannot create instances of abstract class AbstractMegaSuperBike");
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      throw new NotSupportedException("Cannot create instances of abstract class AbstractMegaSuperBike");
    }
  }
  [SoodaObjectFactoryAttribute("ConcreteMegaSuperBikeA", typeof(ConcreteMegaSuperBikeA))]
  public class ConcreteMegaSuperBikeA_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static ConcreteMegaSuperBikeA_Factory _theFactory = new ConcreteMegaSuperBikeA_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("ConcreteMegaSuperBikeA");
    private static Type _theType = typeof(ConcreteMegaSuperBikeA);
    private ConcreteMegaSuperBikeA_Factory() {
    }
    public static ConcreteMegaSuperBikeA_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return ConcreteMegaSuperBikeA_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return ConcreteMegaSuperBikeA_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new ConcreteMegaSuperBikeA(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      ConcreteMegaSuperBikeA retVal = new ConcreteMegaSuperBikeA(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("ConcreteMegaSuperBikeB", typeof(ConcreteMegaSuperBikeB))]
  public class ConcreteMegaSuperBikeB_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static ConcreteMegaSuperBikeB_Factory _theFactory = new ConcreteMegaSuperBikeB_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("ConcreteMegaSuperBikeB");
    private static Type _theType = typeof(ConcreteMegaSuperBikeB);
    private ConcreteMegaSuperBikeB_Factory() {
    }
    public static ConcreteMegaSuperBikeB_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return ConcreteMegaSuperBikeB_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return ConcreteMegaSuperBikeB_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new ConcreteMegaSuperBikeB(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      ConcreteMegaSuperBikeB retVal = new ConcreteMegaSuperBikeB(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("ExtendedBike", typeof(ExtendedBike))]
  public class ExtendedBike_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static ExtendedBike_Factory _theFactory = new ExtendedBike_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("ExtendedBike");
    private static Type _theType = typeof(ExtendedBike);
    private ExtendedBike_Factory() {
    }
    public static ExtendedBike_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return ExtendedBike_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return ExtendedBike_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new ExtendedBike(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      ExtendedBike retVal = new ExtendedBike(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("VehicleMileage", typeof(VehicleMileage))]
  public class VehicleMileage_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static VehicleMileage_Factory _theFactory = new VehicleMileage_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("VehicleMileage");
    private static Type _theType = typeof(VehicleMileage);
    private VehicleMileage_Factory() {
    }
    public static VehicleMileage_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return VehicleMileage_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return VehicleMileage_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new VehicleMileage(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      VehicleMileage retVal = new VehicleMileage(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("MileageItem", typeof(MileageItem))]
  public class MileageItem_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static MileageItem_Factory _theFactory = new MileageItem_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("MileageItem");
    private static Type _theType = typeof(MileageItem);
    private MileageItem_Factory() {
    }
    public static MileageItem_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return MileageItem_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return MileageItem_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new MileageItem(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      MileageItem retVal = new MileageItem(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("AllDataTypes", typeof(AllDataTypes))]
  public class AllDataTypes_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static AllDataTypes_Factory _theFactory = new AllDataTypes_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("AllDataTypes");
    private static Type _theType = typeof(AllDataTypes);
    private AllDataTypes_Factory() {
    }
    public static AllDataTypes_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return AllDataTypes_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return AllDataTypes_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new AllDataTypes(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      AllDataTypes retVal = new AllDataTypes(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("PKBool", typeof(PKBool))]
  public class PKBool_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.BooleanFieldHandler(false);
    private static PKBool_Factory _theFactory = new PKBool_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("PKBool");
    private static Type _theType = typeof(PKBool);
    private PKBool_Factory() {
    }
    public static PKBool_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return PKBool_Stub.GetRef(tran, ((bool)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return PKBool_Stub.TryGet(tran, ((bool)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new PKBool(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      PKBool retVal = new PKBool(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("PKGuid", typeof(PKGuid))]
  public class PKGuid_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.GuidFieldHandler(false);
    private static PKGuid_Factory _theFactory = new PKGuid_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("PKGuid");
    private static Type _theType = typeof(PKGuid);
    private PKGuid_Factory() {
    }
    public static PKGuid_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return PKGuid_Stub.GetRef(tran, ((System.Guid)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return PKGuid_Stub.TryGet(tran, ((System.Guid)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new PKGuid(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      PKGuid retVal = new PKGuid(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("PKDateTime", typeof(PKDateTime))]
  public class PKDateTime_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.DateTimeFieldHandler(false);
    private static PKDateTime_Factory _theFactory = new PKDateTime_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("PKDateTime");
    private static Type _theType = typeof(PKDateTime);
    private PKDateTime_Factory() {
    }
    public static PKDateTime_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return PKDateTime_Stub.GetRef(tran, ((System.DateTime)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return PKDateTime_Stub.TryGet(tran, ((System.DateTime)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new PKDateTime(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      PKDateTime retVal = new PKDateTime(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("PKInt32", typeof(PKInt32))]
  public class PKInt32_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static PKInt32_Factory _theFactory = new PKInt32_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("PKInt32");
    private static Type _theType = typeof(PKInt32);
    private PKInt32_Factory() {
    }
    public static PKInt32_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return PKInt32_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return PKInt32_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new PKInt32(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      PKInt32 retVal = new PKInt32(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("PKInt64", typeof(PKInt64))]
  public class PKInt64_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int64FieldHandler(false);
    private static PKInt64_Factory _theFactory = new PKInt64_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("PKInt64");
    private static Type _theType = typeof(PKInt64);
    private PKInt64_Factory() {
    }
    public static PKInt64_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return PKInt64_Stub.GetRef(tran, ((long)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return PKInt64_Stub.TryGet(tran, ((long)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new PKInt64(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      PKInt64 retVal = new PKInt64(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("PKString", typeof(PKString))]
  public class PKString_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(false);
    private static PKString_Factory _theFactory = new PKString_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("PKString");
    private static Type _theType = typeof(PKString);
    private PKString_Factory() {
    }
    public static PKString_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return PKString_Stub.GetRef(tran, ((string)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return PKString_Stub.TryGet(tran, ((string)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new PKString(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      PKString retVal = new PKString(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("MultiKey", typeof(MultiKey))]
  public class MultiKey_Factory : object, ISoodaObjectFactory {
    private static MultiKey_Factory _theFactory = new MultiKey_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("MultiKey");
    private static Type _theType = typeof(MultiKey);
    private MultiKey_Factory() {
    }
    public static MultiKey_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return MultiKey_Stub.GetRef(tran, ((SoodaTuple)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return MultiKey_Stub.TryGet(tran, ((SoodaTuple)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      throw new NotSupportedException("GetPrimaryKeyFieldHandler() makes no sense on multi-column primary keys.");
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new MultiKey(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      MultiKey retVal = new MultiKey(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("EightFields", typeof(EightFields))]
  public class EightFields_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static EightFields_Factory _theFactory = new EightFields_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = Sooda.UnitTests.Objects._DatabaseSchema.GetSchema().FindClassByName("EightFields");
    private static Type _theType = typeof(EightFields);
    private EightFields_Factory() {
    }
    public static EightFields_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return EightFields_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return EightFields_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _theClassInfo.UnifiedFields[ordinal].GetFieldHandler();
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new EightFields(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      EightFields retVal = new EightFields(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  public class ContactRepository : object {
    private ContactRepository() {
    }
    public static System.Linq.IQueryable<IContact> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public static IContact Load(object primaryKey) {
      return Load(SoodaTransaction.ActiveTransaction, primaryKey);
    }
    public static IContact Load(SoodaTransaction tran, object primaryKey) {
      IContact retVal = ContactRepository.GetRef(tran, primaryKey);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(((SoodaObject)(retVal)));
      return retVal;
    }
    public static IContact GetRef(object primaryKey) {
      return GetRef(SoodaTransaction.ActiveTransaction, primaryKey);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static IContact TryGet(object primaryKey) {
      return TryGet(SoodaTransaction.ActiveTransaction, primaryKey);
    }
    public static IContact GetRef(SoodaTransaction tran, object primaryKey) {
      return ((IContact)(Sooda.SoodaObject.GetRefHelper(tran, IContact_Factory.TheFactory, primaryKey)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static IContact TryGet(SoodaTransaction tran, object primaryKey) {
      return ((IContact)(tran.FindObjectWithKey("IContact", primaryKey, typeof(IContact))));
    }
    public static IContact GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((IContact)(Sooda.SoodaObject.GetRefHelper(tran, IContact_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static IContact TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((IContact)(tran.FindObjectWithKey("IContact", tuple, typeof(IContact))));
    }
    public static System.Linq.IQueryable<IContact> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<IContact> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<IContact> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<IContact>(tran, IContact_Factory.TheClassInfo, options);
    }
  }
  public class MileageRepository : object {
    private MileageRepository() {
    }
    public static System.Linq.IQueryable<IMileage> AllQuery {
      get {
        return Linq(SoodaSnapshotOptions.NoWriteObjects);
      }
    }
    public static IMileage Load(object primaryKey) {
      return Load(SoodaTransaction.ActiveTransaction, primaryKey);
    }
    public static IMileage Load(SoodaTransaction tran, object primaryKey) {
      IMileage retVal = MileageRepository.GetRef(tran, primaryKey);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(((SoodaObject)(retVal)));
      return retVal;
    }
    public static IMileage GetRef(object primaryKey) {
      return GetRef(SoodaTransaction.ActiveTransaction, primaryKey);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static IMileage TryGet(object primaryKey) {
      return TryGet(SoodaTransaction.ActiveTransaction, primaryKey);
    }
    public static IMileage GetRef(SoodaTransaction tran, object primaryKey) {
      return ((IMileage)(Sooda.SoodaObject.GetRefHelper(tran, IMileage_Factory.TheFactory, primaryKey)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static IMileage TryGet(SoodaTransaction tran, object primaryKey) {
      return ((IMileage)(tran.FindObjectWithKey("IMileage", primaryKey, typeof(IMileage))));
    }
    public static IMileage GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((IMileage)(Sooda.SoodaObject.GetRefHelper(tran, IMileage_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static IMileage TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((IMileage)(tran.FindObjectWithKey("IMileage", tuple, typeof(IMileage))));
    }
    public static System.Linq.IQueryable<IMileage> Linq() {
      return Linq(SoodaTransaction.ActiveTransaction, SoodaSnapshotOptions.Default);
    }
    public static System.Linq.IQueryable<IMileage> Linq(SoodaSnapshotOptions options) {
      return Linq(SoodaTransaction.ActiveTransaction, options);
    }
    public static System.Linq.IQueryable<IMileage> Linq(SoodaTransaction tran, SoodaSnapshotOptions options) {
      return new Sooda.Linq.SoodaQuerySource<IMileage>(tran, IMileage_Factory.TheClassInfo, options);
    }
  }
  [SoodaObjectFactoryAttribute("IContact", typeof(IContact))]
  public class IContact_Factory : object, IInterfaceProxyFactory {
    private static IContact_Factory _theFactory = new IContact_Factory();
    private ISoodaObjectFactory _targetFactory;
    private static Type _theType = typeof(Sooda.UnitTests.BaseObjects.Interfaces.IContact);
    private IContact_Factory() {
    }
    public static IInterfaceProxyFactory TheFactory {
      get {
        return _theFactory;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theFactory.GetClassInfo();
      }
    }
    public virtual Type TheInterface {
      get {
        return _theType;
      }
    }
    public virtual Type TheType {
      get {
        return _theFactory.TheType;
      }
    }
    public virtual void SetTargetFactory(ISoodaObjectFactory concreteFactory) {
      _targetFactory = concreteFactory;
    }
    private ISoodaObjectFactory GetTargetFactory() {
      if ((_targetFactory == null)) {
        throw new InvalidOperationException("Not defined concrete type for IContact interface (target factory not found).");
      }
      else {
        return _targetFactory;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return GetTargetFactory().GetRef(tran, keyValue);
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return GetTargetFactory().TryGet(tran, keyValue);
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return GetTargetFactory().GetClassInfo();
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return GetTargetFactory().GetPrimaryKeyFieldHandler();
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return GetTargetFactory().GetFieldHandler(ordinal);
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return GetTargetFactory().CreateNew(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      return GetTargetFactory().GetRawObject(tran);
    }
  }
  [SoodaObjectFactoryAttribute("IMileage", typeof(IMileage))]
  public class IMileage_Factory : object, IInterfaceProxyFactory {
    private static IMileage_Factory _theFactory = new IMileage_Factory();
    private ISoodaObjectFactory _targetFactory;
    private static Type _theType = typeof(Sooda.UnitTests.BaseObjects.Interfaces.IMileage);
    private IMileage_Factory() {
    }
    public static IInterfaceProxyFactory TheFactory {
      get {
        return _theFactory;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theFactory.GetClassInfo();
      }
    }
    public virtual Type TheInterface {
      get {
        return _theType;
      }
    }
    public virtual Type TheType {
      get {
        return _theFactory.TheType;
      }
    }
    public virtual void SetTargetFactory(ISoodaObjectFactory concreteFactory) {
      _targetFactory = concreteFactory;
    }
    private ISoodaObjectFactory GetTargetFactory() {
      if ((_targetFactory == null)) {
        throw new InvalidOperationException("Not defined concrete type for IMileage interface (target factory not found).");
      }
      else {
        return _targetFactory;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return GetTargetFactory().GetRef(tran, keyValue);
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return GetTargetFactory().TryGet(tran, keyValue);
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderBy, 0, -1, options, TheClassInfo);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return GetTargetFactory().GetClassInfo();
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return GetTargetFactory().GetPrimaryKeyFieldHandler();
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return GetTargetFactory().GetFieldHandler(ordinal);
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return GetTargetFactory().CreateNew(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      return GetTargetFactory().GetRawObject(tran);
    }
  }
  public class ContactToRole_RelationTable : SoodaRelationTable {
    public static Sooda.Schema.RelationInfo theRelationInfo = SoodaUnitTestsObjects._DatabaseSchema.GetSchema().FindRelationByName("ContactToRole");
    public ContactToRole_RelationTable() : 
        base("ContactRole", "contact_id", "role_id", theRelationInfo) {
    }
    protected override object DeserializeTupleLeft(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler.DeserializeFromString(reader.GetAttribute("r1"));
    }
    protected override object DeserializeTupleRight(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler.DeserializeFromString(reader.GetAttribute("r2"));
    }
  }
  public class ContactToVehicle_RelationTable : SoodaRelationTable {
    public static Sooda.Schema.RelationInfo theRelationInfo = SoodaUnitTestsObjects._DatabaseSchema.GetSchema().FindRelationByName("ContactToVehicle");
    public ContactToVehicle_RelationTable() : 
        base("ContactVehicle", "contact_id", "vehicle_id", theRelationInfo) {
    }
    protected override object DeserializeTupleLeft(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler.DeserializeFromString(reader.GetAttribute("r1"));
    }
    protected override object DeserializeTupleRight(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler.DeserializeFromString(reader.GetAttribute("r2"));
    }
  }
  public class ContactToBike_RelationTable : SoodaRelationTable {
    public static Sooda.Schema.RelationInfo theRelationInfo = SoodaUnitTestsObjects._DatabaseSchema.GetSchema().FindRelationByName("ContactToBike");
    public ContactToBike_RelationTable() : 
        base("ContactBike", "contact_id", "bike_id", theRelationInfo) {
    }
    protected override object DeserializeTupleLeft(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler.DeserializeFromString(reader.GetAttribute("r1"));
    }
    protected override object DeserializeTupleRight(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler.DeserializeFromString(reader.GetAttribute("r2"));
    }
  }
  public class RelInt32ToString_RelationTable : SoodaRelationTable {
    public static Sooda.Schema.RelationInfo theRelationInfo = SoodaUnitTestsObjects._DatabaseSchema.GetSchema().FindRelationByName("RelInt32ToString");
    public RelInt32ToString_RelationTable() : 
        base("RelInt32ToString", "ll", "rr", theRelationInfo) {
    }
    protected override object DeserializeTupleLeft(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler.DeserializeFromString(reader.GetAttribute("r1"));
    }
    protected override object DeserializeTupleRight(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.StringFieldHandler.DeserializeFromString(reader.GetAttribute("r2"));
    }
  }
  public class RelInt64ToDateTime_RelationTable : SoodaRelationTable {
    public static Sooda.Schema.RelationInfo theRelationInfo = SoodaUnitTestsObjects._DatabaseSchema.GetSchema().FindRelationByName("RelInt64ToDateTime");
    public RelInt64ToDateTime_RelationTable() : 
        base("RelInt64ToDateTime", "ll", "rr", theRelationInfo) {
    }
    protected override object DeserializeTupleLeft(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.Int64FieldHandler.DeserializeFromString(reader.GetAttribute("r1"));
    }
    protected override object DeserializeTupleRight(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.DateTimeFieldHandler.DeserializeFromString(reader.GetAttribute("r2"));
    }
  }
  public class RelStringToBool_RelationTable : SoodaRelationTable {
    public static Sooda.Schema.RelationInfo theRelationInfo = SoodaUnitTestsObjects._DatabaseSchema.GetSchema().FindRelationByName("RelStringToBool");
    public RelStringToBool_RelationTable() : 
        base("RelStringToBool", "ll", "rr", theRelationInfo) {
    }
    protected override object DeserializeTupleLeft(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.StringFieldHandler.DeserializeFromString(reader.GetAttribute("r1"));
    }
    protected override object DeserializeTupleRight(System.Xml.XmlReader reader) {
      return Sooda.ObjectMapper.FieldHandlers.BooleanFieldHandler.DeserializeFromString(reader.GetAttribute("r2"));
    }
  }
  public class SuperBikeCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public SuperBikeCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(SuperBike item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(SuperBikeWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsSuperBikeWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("SuperBike", whereClause);
    }
  }
  public class SuperBikeWrapperExpression : Sooda.QL.SoqlPathExpression {
    public SuperBikeWrapperExpression() {
    }
    public SuperBikeWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(this, "Contacts");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Type"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Name"));
      }
    }
    public virtual VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(this, "Mileage");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "TwoWheels"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params SuperBikeWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params SuperBike[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(SuperBikeWrapperExpression left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(SuperBikeWrapperExpression left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(SuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(SuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(SuperBike left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(SuperBike left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(SuperBikeWrapperExpression left, SuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(SuperBikeWrapperExpression left, SuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(SuperBikeWrapperExpression left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(SuperBikeWrapperExpression left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(SuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(SuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(SuperBike left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(SuperBike left, SuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(SuperBikeWrapperExpression left, SuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(SuperBikeWrapperExpression left, SuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class SuperBikeNullableWrapperExpression : SuperBikeWrapperExpression {
    public SuperBikeNullableWrapperExpression() {
    }
    public SuperBikeNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class MegaSuperBikeCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public MegaSuperBikeCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(MegaSuperBike item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(MegaSuperBikeWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsMegaSuperBikeWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("MegaSuperBike", whereClause);
    }
  }
  public class MegaSuperBikeWrapperExpression : Sooda.QL.SoqlPathExpression {
    public MegaSuperBikeWrapperExpression() {
    }
    public MegaSuperBikeWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(this, "Contacts");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Type"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Name"));
      }
    }
    public virtual VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(this, "Mileage");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "TwoWheels"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params MegaSuperBikeWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params MegaSuperBike[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MegaSuperBikeWrapperExpression left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MegaSuperBikeWrapperExpression left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MegaSuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MegaSuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MegaSuperBike left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MegaSuperBike left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MegaSuperBikeWrapperExpression left, MegaSuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MegaSuperBikeWrapperExpression left, MegaSuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MegaSuperBikeWrapperExpression left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MegaSuperBikeWrapperExpression left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MegaSuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MegaSuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MegaSuperBike left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MegaSuperBike left, MegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MegaSuperBikeWrapperExpression left, MegaSuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MegaSuperBikeWrapperExpression left, MegaSuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class MegaSuperBikeNullableWrapperExpression : MegaSuperBikeWrapperExpression {
    public MegaSuperBikeNullableWrapperExpression() {
    }
    public MegaSuperBikeNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class AbstractMegaSuperBikeCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public AbstractMegaSuperBikeCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(AbstractMegaSuperBike item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(AbstractMegaSuperBikeWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsAbstractMegaSuperBikeWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("AbstractMegaSuperBike", whereClause);
    }
  }
  public class AbstractMegaSuperBikeWrapperExpression : Sooda.QL.SoqlPathExpression {
    public AbstractMegaSuperBikeWrapperExpression() {
    }
    public AbstractMegaSuperBikeWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(this, "Contacts");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Type"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Name"));
      }
    }
    public virtual VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(this, "Mileage");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "TwoWheels"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params AbstractMegaSuperBikeWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params AbstractMegaSuperBike[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(AbstractMegaSuperBikeWrapperExpression left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(AbstractMegaSuperBikeWrapperExpression left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(AbstractMegaSuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(AbstractMegaSuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(AbstractMegaSuperBike left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(AbstractMegaSuperBike left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(AbstractMegaSuperBikeWrapperExpression left, AbstractMegaSuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(AbstractMegaSuperBikeWrapperExpression left, AbstractMegaSuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(AbstractMegaSuperBikeWrapperExpression left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(AbstractMegaSuperBikeWrapperExpression left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(AbstractMegaSuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(AbstractMegaSuperBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(AbstractMegaSuperBike left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(AbstractMegaSuperBike left, AbstractMegaSuperBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(AbstractMegaSuperBikeWrapperExpression left, AbstractMegaSuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(AbstractMegaSuperBikeWrapperExpression left, AbstractMegaSuperBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class AbstractMegaSuperBikeNullableWrapperExpression : AbstractMegaSuperBikeWrapperExpression {
    public AbstractMegaSuperBikeNullableWrapperExpression() {
    }
    public AbstractMegaSuperBikeNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class ConcreteMegaSuperBikeACollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public ConcreteMegaSuperBikeACollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(ConcreteMegaSuperBikeA item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(ConcreteMegaSuperBikeAWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsConcreteMegaSuperBikeAWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("ConcreteMegaSuperBikeA", whereClause);
    }
  }
  public class ConcreteMegaSuperBikeAWrapperExpression : Sooda.QL.SoqlPathExpression {
    public ConcreteMegaSuperBikeAWrapperExpression() {
    }
    public ConcreteMegaSuperBikeAWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(this, "Contacts");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Type"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Name"));
      }
    }
    public virtual VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(this, "Mileage");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "TwoWheels"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params ConcreteMegaSuperBikeAWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params ConcreteMegaSuperBikeA[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ConcreteMegaSuperBikeAWrapperExpression left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ConcreteMegaSuperBikeAWrapperExpression left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ConcreteMegaSuperBikeAWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ConcreteMegaSuperBikeAWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ConcreteMegaSuperBikeA left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ConcreteMegaSuperBikeA left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ConcreteMegaSuperBikeAWrapperExpression left, ConcreteMegaSuperBikeA right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ConcreteMegaSuperBikeAWrapperExpression left, ConcreteMegaSuperBikeA right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ConcreteMegaSuperBikeAWrapperExpression left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ConcreteMegaSuperBikeAWrapperExpression left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ConcreteMegaSuperBikeAWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ConcreteMegaSuperBikeAWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ConcreteMegaSuperBikeA left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ConcreteMegaSuperBikeA left, ConcreteMegaSuperBikeAWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ConcreteMegaSuperBikeAWrapperExpression left, ConcreteMegaSuperBikeA right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ConcreteMegaSuperBikeAWrapperExpression left, ConcreteMegaSuperBikeA right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class ConcreteMegaSuperBikeANullableWrapperExpression : ConcreteMegaSuperBikeAWrapperExpression {
    public ConcreteMegaSuperBikeANullableWrapperExpression() {
    }
    public ConcreteMegaSuperBikeANullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class ConcreteMegaSuperBikeBCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public ConcreteMegaSuperBikeBCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(ConcreteMegaSuperBikeB item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(ConcreteMegaSuperBikeBWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsConcreteMegaSuperBikeBWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("ConcreteMegaSuperBikeB", whereClause);
    }
  }
  public class ConcreteMegaSuperBikeBWrapperExpression : Sooda.QL.SoqlPathExpression {
    public ConcreteMegaSuperBikeBWrapperExpression() {
    }
    public ConcreteMegaSuperBikeBWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(this, "Contacts");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Type"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Name"));
      }
    }
    public virtual VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(this, "Mileage");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "TwoWheels"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params ConcreteMegaSuperBikeBWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params ConcreteMegaSuperBikeB[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ConcreteMegaSuperBikeBWrapperExpression left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ConcreteMegaSuperBikeBWrapperExpression left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ConcreteMegaSuperBikeBWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ConcreteMegaSuperBikeBWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ConcreteMegaSuperBikeB left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ConcreteMegaSuperBikeB left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ConcreteMegaSuperBikeBWrapperExpression left, ConcreteMegaSuperBikeB right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ConcreteMegaSuperBikeBWrapperExpression left, ConcreteMegaSuperBikeB right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ConcreteMegaSuperBikeBWrapperExpression left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ConcreteMegaSuperBikeBWrapperExpression left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ConcreteMegaSuperBikeBWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ConcreteMegaSuperBikeBWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ConcreteMegaSuperBikeB left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ConcreteMegaSuperBikeB left, ConcreteMegaSuperBikeBWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ConcreteMegaSuperBikeBWrapperExpression left, ConcreteMegaSuperBikeB right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ConcreteMegaSuperBikeBWrapperExpression left, ConcreteMegaSuperBikeB right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class ConcreteMegaSuperBikeBNullableWrapperExpression : ConcreteMegaSuperBikeBWrapperExpression {
    public ConcreteMegaSuperBikeBNullableWrapperExpression() {
    }
    public ConcreteMegaSuperBikeBNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class ExtendedBikeCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public ExtendedBikeCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(ExtendedBike item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(ExtendedBikeWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsExtendedBikeWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("ExtendedBike", whereClause);
    }
  }
  public class ExtendedBikeWrapperExpression : Sooda.QL.SoqlPathExpression {
    public ExtendedBikeWrapperExpression() {
    }
    public ExtendedBikeWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(this, "Contacts");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Type"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Name"));
      }
    }
    public virtual VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(this, "Mileage");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "TwoWheels"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlStringWrapperExpression ExtendedBikeInfo {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "ExtendedBikeInfo"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params ExtendedBikeWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params ExtendedBike[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ExtendedBikeWrapperExpression left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ExtendedBikeWrapperExpression left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ExtendedBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ExtendedBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ExtendedBike left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ExtendedBike left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(ExtendedBikeWrapperExpression left, ExtendedBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(ExtendedBikeWrapperExpression left, ExtendedBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ExtendedBikeWrapperExpression left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ExtendedBikeWrapperExpression left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ExtendedBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ExtendedBikeWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ExtendedBike left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ExtendedBike left, ExtendedBikeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(ExtendedBikeWrapperExpression left, ExtendedBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(ExtendedBikeWrapperExpression left, ExtendedBike right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class ExtendedBikeNullableWrapperExpression : ExtendedBikeWrapperExpression {
    public ExtendedBikeNullableWrapperExpression() {
    }
    public ExtendedBikeNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class VehicleMileageCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public VehicleMileageCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(VehicleMileage item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(VehicleMileageWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsVehicleMileageWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("VehicleMileage", whereClause);
    }
  }
  public class VehicleMileageWrapperExpression : Sooda.QL.SoqlPathExpression {
    public VehicleMileageWrapperExpression() {
    }
    public VehicleMileageWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual MileageItemCollectionExpression Items {
      get {
        return new MileageItemCollectionExpression(this, "Items");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Total {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Total"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params VehicleMileageWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params VehicleMileage[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(VehicleMileageWrapperExpression left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(VehicleMileageWrapperExpression left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(VehicleMileageWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(VehicleMileageWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(VehicleMileage left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(VehicleMileage left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(VehicleMileageWrapperExpression left, VehicleMileage right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(VehicleMileageWrapperExpression left, VehicleMileage right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(VehicleMileageWrapperExpression left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(VehicleMileageWrapperExpression left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(VehicleMileageWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(VehicleMileageWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(VehicleMileage left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(VehicleMileage left, VehicleMileageWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(VehicleMileageWrapperExpression left, VehicleMileage right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(VehicleMileageWrapperExpression left, VehicleMileage right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class VehicleMileageNullableWrapperExpression : VehicleMileageWrapperExpression {
    public VehicleMileageNullableWrapperExpression() {
    }
    public VehicleMileageNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class MileageItemCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public MileageItemCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(MileageItem item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(MileageItemWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsMileageItemWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("MileageItem", whereClause);
    }
  }
  public class MileageItemWrapperExpression : Sooda.QL.SoqlPathExpression {
    public MileageItemWrapperExpression() {
    }
    public MileageItemWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual VehicleMileageWrapperExpression VehicleMileage {
      get {
        return new VehicleMileageWrapperExpression(this, "VehicleMileage");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Miles {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Miles"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Description {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Description"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params MileageItemWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params MileageItem[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MileageItemWrapperExpression left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MileageItemWrapperExpression left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MileageItemWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MileageItemWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MileageItem left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MileageItem left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MileageItemWrapperExpression left, MileageItem right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MileageItemWrapperExpression left, MileageItem right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MileageItemWrapperExpression left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MileageItemWrapperExpression left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MileageItemWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MileageItemWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MileageItem left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MileageItem left, MileageItemWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MileageItemWrapperExpression left, MileageItem right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MileageItemWrapperExpression left, MileageItem right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class MileageItemNullableWrapperExpression : MileageItemWrapperExpression {
    public MileageItemNullableWrapperExpression() {
    }
    public MileageItemNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class AllDataTypesCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public AllDataTypesCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(AllDataTypes item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(AllDataTypesWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsAllDataTypesWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("AllDataTypes", whereClause);
    }
  }
  public class AllDataTypesWrapperExpression : Sooda.QL.SoqlPathExpression {
    public AllDataTypesWrapperExpression() {
    }
    public AllDataTypesWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableBooleanWrapperExpression BoolVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableBooleanWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "BoolVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression NnBoolVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NnBoolVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableInt32WrapperExpression IntVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "IntVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression NnIntVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NnIntVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableInt64WrapperExpression Int64Val {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableInt64WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Int64Val"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt64WrapperExpression NnInt64Val {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt64WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NnInt64Val"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression StringVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "StringVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlStringWrapperExpression NnStringVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NnStringVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression DateVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "DateVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression NnDateVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NnDateVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableSingleWrapperExpression FloatVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableSingleWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "FloatVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlSingleWrapperExpression NnFloatVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlSingleWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NnFloatVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableDoubleWrapperExpression DoubleVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDoubleWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "DoubleVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlDoubleWrapperExpression NnDoubleVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDoubleWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NnDoubleVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableDecimalWrapperExpression DecimalVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDecimalWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "DecimalVal"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlDecimalWrapperExpression NnDecimalVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDecimalWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NnDecimalVal"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params AllDataTypesWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params AllDataTypes[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(AllDataTypesWrapperExpression left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(AllDataTypesWrapperExpression left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(AllDataTypesWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(AllDataTypesWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(AllDataTypes left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(AllDataTypes left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(AllDataTypesWrapperExpression left, AllDataTypes right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(AllDataTypesWrapperExpression left, AllDataTypes right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(AllDataTypesWrapperExpression left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(AllDataTypesWrapperExpression left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(AllDataTypesWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(AllDataTypesWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(AllDataTypes left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(AllDataTypes left, AllDataTypesWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(AllDataTypesWrapperExpression left, AllDataTypes right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(AllDataTypesWrapperExpression left, AllDataTypes right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class AllDataTypesNullableWrapperExpression : AllDataTypesWrapperExpression {
    public AllDataTypesNullableWrapperExpression() {
    }
    public AllDataTypesNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class PKBoolCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public PKBoolCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKBool item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKBoolWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(bool item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsPKBoolWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("PKBool", whereClause);
    }
  }
  public class PKBoolWrapperExpression : Sooda.QL.SoqlPathExpression {
    public PKBoolWrapperExpression() {
    }
    public PKBoolWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual PKStringCollectionExpression Parents {
      get {
        return new PKStringCollectionExpression(this, "Parents");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Data"));
      }
    }
    public virtual PKBoolWrapperExpression Parent {
      get {
        return new PKBoolWrapperExpression(this, "Parent");
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKBoolWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKBool[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params bool[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKBoolWrapperExpression left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKBoolWrapperExpression left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(bool left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(bool left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKBoolWrapperExpression left, bool right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKBoolWrapperExpression left, bool right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKBool left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKBool left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKBoolWrapperExpression left, PKBool right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKBoolWrapperExpression left, PKBool right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKBoolWrapperExpression left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKBoolWrapperExpression left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(bool left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(bool left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKBoolWrapperExpression left, bool right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKBoolWrapperExpression left, bool right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKBool left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKBool left, PKBoolWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKBoolWrapperExpression left, PKBool right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKBoolWrapperExpression left, PKBool right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class PKBoolNullableWrapperExpression : PKBoolWrapperExpression {
    public PKBoolNullableWrapperExpression() {
    }
    public PKBoolNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class PKGuidCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public PKGuidCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKGuid item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKGuidWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(System.Guid item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsPKGuidWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("PKGuid", whereClause);
    }
  }
  public class PKGuidWrapperExpression : Sooda.QL.SoqlPathExpression {
    public PKGuidWrapperExpression() {
    }
    public PKGuidWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlGuidWrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlGuidWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Data"));
      }
    }
    public virtual PKGuidWrapperExpression Parent {
      get {
        return new PKGuidWrapperExpression(this, "Parent");
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKGuidWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKGuid[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params System.Guid[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKGuidWrapperExpression left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKGuidWrapperExpression left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(System.Guid left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(System.Guid left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKGuidWrapperExpression left, System.Guid right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKGuidWrapperExpression left, System.Guid right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKGuid left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKGuid left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKGuidWrapperExpression left, PKGuid right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKGuidWrapperExpression left, PKGuid right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKGuidWrapperExpression left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKGuidWrapperExpression left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(System.Guid left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(System.Guid left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKGuidWrapperExpression left, System.Guid right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKGuidWrapperExpression left, System.Guid right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKGuid left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKGuid left, PKGuidWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKGuidWrapperExpression left, PKGuid right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKGuidWrapperExpression left, PKGuid right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class PKGuidNullableWrapperExpression : PKGuidWrapperExpression {
    public PKGuidNullableWrapperExpression() {
    }
    public PKGuidNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class PKDateTimeCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public PKDateTimeCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKDateTime item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKDateTimeWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(System.DateTime item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsPKDateTimeWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("PKDateTime", whereClause);
    }
  }
  public class PKDateTimeWrapperExpression : Sooda.QL.SoqlPathExpression {
    public PKDateTimeWrapperExpression() {
    }
    public PKDateTimeWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual PKInt64CollectionExpression Parents {
      get {
        return new PKInt64CollectionExpression(this, "Parents");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Data"));
      }
    }
    public virtual PKDateTimeWrapperExpression Parent {
      get {
        return new PKDateTimeWrapperExpression(this, "Parent");
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKDateTimeWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKDateTime[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params System.DateTime[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKDateTimeWrapperExpression left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKDateTimeWrapperExpression left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(System.DateTime left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(System.DateTime left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKDateTimeWrapperExpression left, System.DateTime right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKDateTimeWrapperExpression left, System.DateTime right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKDateTime left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKDateTime left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKDateTimeWrapperExpression left, PKDateTime right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKDateTimeWrapperExpression left, PKDateTime right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKDateTimeWrapperExpression left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKDateTimeWrapperExpression left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(System.DateTime left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(System.DateTime left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKDateTimeWrapperExpression left, System.DateTime right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKDateTimeWrapperExpression left, System.DateTime right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKDateTime left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKDateTime left, PKDateTimeWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKDateTimeWrapperExpression left, PKDateTime right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKDateTimeWrapperExpression left, PKDateTime right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class PKDateTimeNullableWrapperExpression : PKDateTimeWrapperExpression {
    public PKDateTimeNullableWrapperExpression() {
    }
    public PKDateTimeNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class PKInt32CollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public PKInt32CollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKInt32 item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKInt32WrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsPKInt32Where(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("PKInt32", whereClause);
    }
  }
  public class PKInt32WrapperExpression : Sooda.QL.SoqlPathExpression {
    public PKInt32WrapperExpression() {
    }
    public PKInt32WrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual PKStringCollectionExpression Children {
      get {
        return new PKStringCollectionExpression(this, "Children");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Data"));
      }
    }
    public virtual PKInt32WrapperExpression Parent {
      get {
        return new PKInt32WrapperExpression(this, "Parent");
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKInt32WrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKInt32[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKInt32WrapperExpression left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKInt32WrapperExpression left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKInt32WrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKInt32WrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKInt32 left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKInt32 left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKInt32WrapperExpression left, PKInt32 right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKInt32WrapperExpression left, PKInt32 right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKInt32WrapperExpression left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKInt32WrapperExpression left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKInt32WrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKInt32WrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKInt32 left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKInt32 left, PKInt32WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKInt32WrapperExpression left, PKInt32 right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKInt32WrapperExpression left, PKInt32 right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class PKInt32NullableWrapperExpression : PKInt32WrapperExpression {
    public PKInt32NullableWrapperExpression() {
    }
    public PKInt32NullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class PKInt64CollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public PKInt64CollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKInt64 item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKInt64WrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(long item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsPKInt64Where(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("PKInt64", whereClause);
    }
  }
  public class PKInt64WrapperExpression : Sooda.QL.SoqlPathExpression {
    public PKInt64WrapperExpression() {
    }
    public PKInt64WrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual PKDateTimeCollectionExpression Children {
      get {
        return new PKDateTimeCollectionExpression(this, "Children");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt64WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt64WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Data"));
      }
    }
    public virtual PKInt64WrapperExpression Parent {
      get {
        return new PKInt64WrapperExpression(this, "Parent");
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKInt64WrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKInt64[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params long[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKInt64WrapperExpression left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKInt64WrapperExpression left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(long left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(long left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKInt64WrapperExpression left, long right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKInt64WrapperExpression left, long right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKInt64 left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKInt64 left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKInt64WrapperExpression left, PKInt64 right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKInt64WrapperExpression left, PKInt64 right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKInt64WrapperExpression left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKInt64WrapperExpression left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(long left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(long left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKInt64WrapperExpression left, long right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKInt64WrapperExpression left, long right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKInt64 left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKInt64 left, PKInt64WrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKInt64WrapperExpression left, PKInt64 right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKInt64WrapperExpression left, PKInt64 right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class PKInt64NullableWrapperExpression : PKInt64WrapperExpression {
    public PKInt64NullableWrapperExpression() {
    }
    public PKInt64NullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class PKStringCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public PKStringCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKString item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(PKStringWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(string item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsPKStringWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("PKString", whereClause);
    }
  }
  public class PKStringWrapperExpression : Sooda.QL.SoqlPathExpression {
    public PKStringWrapperExpression() {
    }
    public PKStringWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual PKBoolCollectionExpression Children {
      get {
        return new PKBoolCollectionExpression(this, "Children");
      }
    }
    public virtual PKInt32CollectionExpression Parents {
      get {
        return new PKInt32CollectionExpression(this, "Parents");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Data"));
      }
    }
    public virtual PKStringWrapperExpression Parent {
      get {
        return new PKStringWrapperExpression(this, "Parent");
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKStringWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params PKString[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params string[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKStringWrapperExpression left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKStringWrapperExpression left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(string left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(string left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKStringWrapperExpression left, string right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKStringWrapperExpression left, string right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKString left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKString left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(PKStringWrapperExpression left, PKString right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(PKStringWrapperExpression left, PKString right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKStringWrapperExpression left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKStringWrapperExpression left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(string left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(string left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKStringWrapperExpression left, string right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKStringWrapperExpression left, string right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKString left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKString left, PKStringWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(PKStringWrapperExpression left, PKString right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(PKStringWrapperExpression left, PKString right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class PKStringNullableWrapperExpression : PKStringWrapperExpression {
    public PKStringNullableWrapperExpression() {
    }
    public PKStringNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class MultiKeyCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public MultiKeyCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(MultiKey item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(MultiKeyWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsMultiKeyWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("MultiKey", whereClause);
    }
  }
  public class MultiKeyWrapperExpression : Sooda.QL.SoqlPathExpression {
    public MultiKeyWrapperExpression() {
    }
    public MultiKeyWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Contact {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Contact"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Group {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Group"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Value {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Value"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Value2 {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Value2"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Value3 {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Value3"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params MultiKeyWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params MultiKey[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MultiKeyWrapperExpression left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MultiKeyWrapperExpression left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MultiKeyWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MultiKeyWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MultiKey left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MultiKey left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(MultiKeyWrapperExpression left, MultiKey right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(MultiKeyWrapperExpression left, MultiKey right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MultiKeyWrapperExpression left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MultiKeyWrapperExpression left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MultiKeyWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MultiKeyWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MultiKey left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MultiKey left, MultiKeyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(MultiKeyWrapperExpression left, MultiKey right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(MultiKeyWrapperExpression left, MultiKey right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class MultiKeyNullableWrapperExpression : MultiKeyWrapperExpression {
    public MultiKeyNullableWrapperExpression() {
    }
    public MultiKeyNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class EightFieldsCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public EightFieldsCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(EightFields item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(EightFieldsWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsEightFieldsWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("EightFields", whereClause);
    }
  }
  public class EightFieldsWrapperExpression : Sooda.QL.SoqlPathExpression {
    public EightFieldsWrapperExpression() {
    }
    public EightFieldsWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual EightFieldsNullableWrapperExpression Parent {
      get {
        return new EightFieldsNullableWrapperExpression(this, "Parent");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlTimeSpanWrapperExpression TimeSpan {
      get {
        return new Sooda.QL.TypedWrappers.SoqlTimeSpanWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "TimeSpan"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableTimeSpanWrapperExpression NullableTimeSpan {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableTimeSpanWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NullableTimeSpan"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlGuidWrapperExpression Guid {
      get {
        return new Sooda.QL.TypedWrappers.SoqlGuidWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Guid"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableGuidWrapperExpression NullableGuid {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableGuidWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "NullableGuid"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params EightFieldsWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params EightFields[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(IEnumerable items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(EightFieldsWrapperExpression left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(EightFieldsWrapperExpression left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(EightFieldsWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(EightFieldsWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(EightFields left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(EightFields left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(EightFieldsWrapperExpression left, EightFields right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(EightFieldsWrapperExpression left, EightFields right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(EightFieldsWrapperExpression left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(EightFieldsWrapperExpression left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(EightFieldsWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(EightFieldsWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(EightFields left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(EightFields left, EightFieldsWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(EightFieldsWrapperExpression left, EightFields right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(EightFieldsWrapperExpression left, EightFields right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class EightFieldsNullableWrapperExpression : EightFieldsWrapperExpression {
    public EightFieldsNullableWrapperExpression() {
    }
    public EightFieldsNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
}
namespace Sooda.UnitTests.Objects.TypedQueries {
  using System;
  using System.Collections;
  using System.Diagnostics;
  using System.Data;
  using Sooda;
  using Sooda.UnitTests.Objects.Stubs;
  using Sooda.UnitTests.BaseObjects;
  using Sooda.UnitTests.BaseObjects.Stubs;
  using Sooda.UnitTests.BaseObjects.TypedQueries;
  using Sooda.UnitTests.BaseObjects.Interfaces;
  
  public class SuperBikeField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(null, "Contacts");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Type"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Name"));
      }
    }
    public static VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(null, "Mileage");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("TwoWheels"));
      }
    }
  }
  public class MegaSuperBikeField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(null, "Contacts");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Type"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Name"));
      }
    }
    public static VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(null, "Mileage");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("TwoWheels"));
      }
    }
  }
  public class AbstractMegaSuperBikeField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(null, "Contacts");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Type"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Name"));
      }
    }
    public static VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(null, "Mileage");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("TwoWheels"));
      }
    }
  }
  public class ConcreteMegaSuperBikeAField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(null, "Contacts");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Type"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Name"));
      }
    }
    public static VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(null, "Mileage");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("TwoWheels"));
      }
    }
  }
  public class ConcreteMegaSuperBikeBField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(null, "Contacts");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Type"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Name"));
      }
    }
    public static VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(null, "Mileage");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("TwoWheels"));
      }
    }
  }
  public class ExtendedBikeField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static ContactCollectionExpression Contacts {
      get {
        return new ContactCollectionExpression(null, "Contacts");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Type {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Type"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Name"));
      }
    }
    public static VehicleMileageNullableWrapperExpression Mileage {
      get {
        return new VehicleMileageNullableWrapperExpression(null, "Mileage");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression TwoWheels {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("TwoWheels"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression ExtendedBikeInfo {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression("ExtendedBikeInfo"));
      }
    }
  }
  public class VehicleMileageField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static MileageItemCollectionExpression Items {
      get {
        return new MileageItemCollectionExpression(null, "Items");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Total {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Total"));
      }
    }
  }
  public class MileageItemField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static VehicleMileageWrapperExpression VehicleMileage {
      get {
        return new VehicleMileageWrapperExpression(null, "VehicleMileage");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Miles {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Miles"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Description {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Description"));
      }
    }
  }
  public class AllDataTypesField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableBooleanWrapperExpression BoolVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableBooleanWrapperExpression(new Sooda.QL.SoqlPathExpression("BoolVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression NnBoolVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression(new Sooda.QL.SoqlPathExpression("NnBoolVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableInt32WrapperExpression IntVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("IntVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression NnIntVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("NnIntVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableInt64WrapperExpression Int64Val {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableInt64WrapperExpression(new Sooda.QL.SoqlPathExpression("Int64Val"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt64WrapperExpression NnInt64Val {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt64WrapperExpression(new Sooda.QL.SoqlPathExpression("NnInt64Val"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression StringVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("StringVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression NnStringVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression("NnStringVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression DateVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression("DateVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression NnDateVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression("NnDateVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableSingleWrapperExpression FloatVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableSingleWrapperExpression(new Sooda.QL.SoqlPathExpression("FloatVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlSingleWrapperExpression NnFloatVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlSingleWrapperExpression(new Sooda.QL.SoqlPathExpression("NnFloatVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableDoubleWrapperExpression DoubleVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDoubleWrapperExpression(new Sooda.QL.SoqlPathExpression("DoubleVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlDoubleWrapperExpression NnDoubleVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDoubleWrapperExpression(new Sooda.QL.SoqlPathExpression("NnDoubleVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableDecimalWrapperExpression DecimalVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDecimalWrapperExpression(new Sooda.QL.SoqlPathExpression("DecimalVal"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlDecimalWrapperExpression NnDecimalVal {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDecimalWrapperExpression(new Sooda.QL.SoqlPathExpression("NnDecimalVal"));
      }
    }
  }
  public class PKBoolField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static PKStringCollectionExpression Parents {
      get {
        return new PKStringCollectionExpression(null, "Parents");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Data"));
      }
    }
    public static PKBoolWrapperExpression Parent {
      get {
        return new PKBoolWrapperExpression(null, "Parent");
      }
    }
  }
  public class PKGuidField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlGuidWrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlGuidWrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Data"));
      }
    }
    public static PKGuidWrapperExpression Parent {
      get {
        return new PKGuidWrapperExpression(null, "Parent");
      }
    }
  }
  public class PKDateTimeField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static PKInt64CollectionExpression Parents {
      get {
        return new PKInt64CollectionExpression(null, "Parents");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Data"));
      }
    }
    public static PKDateTimeWrapperExpression Parent {
      get {
        return new PKDateTimeWrapperExpression(null, "Parent");
      }
    }
  }
  public class PKInt32Field : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static PKStringCollectionExpression Children {
      get {
        return new PKStringCollectionExpression(null, "Children");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Data"));
      }
    }
    public static PKInt32WrapperExpression Parent {
      get {
        return new PKInt32WrapperExpression(null, "Parent");
      }
    }
  }
  public class PKInt64Field : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static PKDateTimeCollectionExpression Children {
      get {
        return new PKDateTimeCollectionExpression(null, "Children");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt64WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt64WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Data"));
      }
    }
    public static PKInt64WrapperExpression Parent {
      get {
        return new PKInt64WrapperExpression(null, "Parent");
      }
    }
  }
  public class PKStringField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static PKBoolCollectionExpression Children {
      get {
        return new PKBoolCollectionExpression(null, "Children");
      }
    }
    public static PKInt32CollectionExpression Parents {
      get {
        return new PKInt32CollectionExpression(null, "Parents");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Data {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Data"));
      }
    }
    public static PKStringWrapperExpression Parent {
      get {
        return new PKStringWrapperExpression(null, "Parent");
      }
    }
  }
  public class MultiKeyField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Contact {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Contact"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Group {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Group"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Value {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Value"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Value2 {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Value2"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Value3 {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Value3"));
      }
    }
  }
  public class EightFieldsField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static EightFieldsNullableWrapperExpression Parent {
      get {
        return new EightFieldsNullableWrapperExpression(null, "Parent");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlTimeSpanWrapperExpression TimeSpan {
      get {
        return new Sooda.QL.TypedWrappers.SoqlTimeSpanWrapperExpression(new Sooda.QL.SoqlPathExpression("TimeSpan"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableTimeSpanWrapperExpression NullableTimeSpan {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableTimeSpanWrapperExpression(new Sooda.QL.SoqlPathExpression("NullableTimeSpan"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlGuidWrapperExpression Guid {
      get {
        return new Sooda.QL.TypedWrappers.SoqlGuidWrapperExpression(new Sooda.QL.SoqlPathExpression("Guid"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableGuidWrapperExpression NullableGuid {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableGuidWrapperExpression(new Sooda.QL.SoqlPathExpression("NullableGuid"));
      }
    }
  }
}
namespace Sooda.UnitTests.Objects {
  using System;
  using System.Collections;
  using System.Diagnostics;
  using System.Data;
  using Sooda;
  using SoodaUnitTestsObjectsStubs = Sooda.UnitTests.Objects.Stubs;
  using Sooda.UnitTests.BaseObjects;
  using Sooda.UnitTests.BaseObjects.Interfaces;
  
  public class _DatabaseSchema : object, Sooda.ObjectMapper.ISoodaSchema {
    private Sooda.ISoodaObjectFactory[] _factories;
    private Sooda.IInterfaceProxyFactory[] _proxies;
    private static Sooda.Schema.SchemaInfo _theSchema;
    static _DatabaseSchema() {
      _theSchema = LoadSchema();
    }
    public _DatabaseSchema() {
      this._factories = new ISoodaObjectFactory[] {
          Sooda.UnitTests.Objects.Stubs.SuperBike_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.MegaSuperBike_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.AbstractMegaSuperBike_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.ConcreteMegaSuperBikeA_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.ConcreteMegaSuperBikeB_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.ExtendedBike_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.VehicleMileage_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.MileageItem_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.AllDataTypes_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.PKBool_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.PKGuid_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.PKDateTime_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.PKInt32_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.PKInt64_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.PKString_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.MultiKey_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.EightFields_Factory.TheFactory,
          Sooda.UnitTests.BaseObjects.Stubs.Role_Factory.TheFactory,
          Sooda.UnitTests.BaseObjects.Stubs.ContactType_Factory.TheFactory,
          Sooda.UnitTests.BaseObjects.Stubs.Contact_Factory.TheFactory,
          Sooda.UnitTests.BaseObjects.Stubs.KeyGen_Factory.TheFactory,
          Sooda.UnitTests.BaseObjects.Stubs.Group_Factory.TheFactory,
          Sooda.UnitTests.BaseObjects.Stubs.Vehicle_Factory.TheFactory,
          Sooda.UnitTests.BaseObjects.Stubs.Car_Factory.TheFactory,
          Sooda.UnitTests.BaseObjects.Stubs.Bike_Factory.TheFactory};
      this._proxies = new IInterfaceProxyFactory[] {
          Sooda.UnitTests.Objects.Stubs.IContact_Factory.TheFactory,
          Sooda.UnitTests.Objects.Stubs.IMileage_Factory.TheFactory};
    }
    public virtual Sooda.Schema.SchemaInfo Schema {
      get {
        return GetSchema();
      }
    }
    public static Sooda.Schema.SchemaInfo GetSchema() {
      return _theSchema;
    }
    private static Sooda.Schema.SchemaInfo LoadSchema() {
      return Sooda.ObjectMapper.SchemaLoader.GetSchemaFromAssembly(typeof(Sooda.UnitTests.Objects._DatabaseSchema).Assembly);
    }
    public virtual Sooda.ISoodaObjectFactory[] GetFactories() {
      return this._factories;
    }
    public virtual Sooda.IInterfaceProxyFactory[] GetProxies() {
      return this._proxies;
    }
  }
}
