<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../DBSchema.xsl" ?>
<schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.sooda.org/schemas/SoodaSchema.xsd">
    <datasource name="default" type="Sooda.Sql.SqlDataSource" dynamicFields="true" />

    <class name="Role" cached="false" triggers="false" label="Id">
        <table name="_Role">
            <field name="Id" dbcolumn="id" type="Integer" primaryKey="true" />
            <field name="Name" dbcolumn="name" type="String" size="64" nullable="true" />
        </table>

        <collectionManyToMany name="Members" relation="ContactToRole" masterField="0" />

        <const name="Employee" key="1" />
        <const name="Manager" key="2" />
        <const name="Customer" key="3" />
    </class>

    <class name="ContactType" cached="true" defaultPrecommitValue="Customer" triggers="false">
        <table name="ContactType">
            <field name="Code" dbcolumn="code" type="String" size="16" primaryKey="true" />
            <field name="Description" dbcolumn="description" type="String" size="64" nullable="true" />
        </table>

        <const name="Employee" key="Employee" />
        <const name="Manager" key="Manager" />
        <const name="Customer" key="Customer" />
    </class>

    <class name="Contact" cached="true" cacheCollections="true" label="Name">
        <description>Contact information of a person.</description>
        <table name="Contact">
            <field name="ContactId" dbcolumn="id" type="Integer" primaryKey="true" />
            <field name="PrimaryGroup" dbcolumn="primary_group" type="Integer" references="Group" nullable="true" onDelete="Cascade" find="true" />
            <field name="Type" dbcolumn="type" type="String" size="16" references="ContactType" findList="true" />
            <field name="Name" dbcolumn="name" type="AnsiString" size="64" nullable="false" find="true" findList="true" />
            <field name="Active" dbcolumn="active" type="BooleanAsInteger" />
            <field name="Manager" dbcolumn="manager" type="Integer" references="Contact" nullable="true"><description>The manager of this Contact.</description></field>
        </table>
        <table name="Contact">
            <field name="ContactId" dbcolumn="id" type="Integer" primaryKey="true" />
            <field name="LastSalary" dbcolumn="last_salary" type="Decimal" size="20" precision="10" nullable="true" />
        </table>

        <collectionOneToMany name="Subordinates" class="Contact" foreignField="Manager" />
        <collectionOneToMany name="Bikes1" class="Bike" foreignField="Owner">
            <description>Bikes that this Contact owns.</description>
        </collectionOneToMany>
        <collectionManyToMany name="Roles" relation="ContactToRole" masterField="1" />
        <collectionManyToMany name="Vehicles" relation="ContactToVehicle" masterField="1"><description>Vehicles that this Contact owns.</description></collectionManyToMany>
        <collectionManyToMany name="Bikes" relation="ContactToBike" masterField="1" />

        <const name="Mary" key="1"><description>Mary Manager</description></const>
        <const name="Ed" key="2" />
        <const name="Eva" key="3" />
    </class>

    <class name="KeyGen">
        <table name="KeyGen">
            <field name="key_name" dbcolumn="key_name" type="String" size="64" primaryKey="true" />
            <field name="key_value" dbcolumn="key_value" type="Integer" />
        </table>
    </class>

    <class name="Group" cached="true" label="Members.Count">
        <table name="_Group">
            <field name="Id" dbcolumn="id" type="Integer" primaryKey="true" />
            <field name="Manager" dbcolumn="manager" type="Integer" references="Contact" onDelete="Cascade" prefetch="2" />
            <field name="Name" dbcolumn="name" type="AnsiString" size="64" nullable="true" />
        </table>

        <collectionOneToMany name="Members" class="Contact" foreignField="PrimaryGroup" />
        <collectionOneToMany name="Managers" class="Contact" foreignField="PrimaryGroup" where="Type='Employee'" />
    </class>

    <class name="Vehicle" subclassSelectorField="Type" label="Owner.Name">
        <table name="Vehicle">
            <field name="Id" dbcolumn="id" type="Integer" primaryKey="true" />
            <field name="Type" dbcolumn="type" type="Integer" />
            <field name="Name" dbcolumn="name" type="String" size="64" nullable="true" />
            <field name="Owner" dbcolumn="owner" type="Integer" references="Contact" nullable="true" />
        </table>
        <collectionManyToMany name="Contacts" relation="ContactToVehicle" masterField="0"><description>Owners of vehicle.</description></collectionManyToMany>
    </class>

    <class name="Car" subclassSelectorValue="1" inheritFrom="Vehicle">
        <table name="Vehicle">
            <field name="Id" dbcolumn="id" type="Integer" primaryKey="true" />
            <field name="ABS" dbcolumn="abs" type="Integer" nullable="false" />
            <field name="FourWheelDrive" dbcolumn="four_wheel_drive" type="Integer" nullable="false" />
        </table>
    </class>

    <class name="Bike" subclassSelectorValue="2" inheritFrom="Vehicle">
        <table name="Bike">
            <field name="Id" dbcolumn="id" type="Integer" primaryKey="true" />
            <field name="TwoWheels" dbcolumn="two_wheels" type="Integer" nullable="false" />
        </table>
    </class>
    
    <class name="PersonBase">
        <table name="PersonBase">
            <field name="Id" dbcolumn="id" type="Integer" primaryKey="true" />
            <field name="Name"  type="String" nullable="false" />
        </table>
    
    </class>

    <relation name="ContactToRole">
        <table name="ContactRole">
            <field name="Contact" dbcolumn="contact_id" type="Integer" references="Contact" primaryKey="true" />
            <field name="Role" dbcolumn="role_id" type="Integer" references="Role" />
        </table>
    </relation>

    <relation name="ContactToVehicle">
        <description>Ownership of vehicles.</description>
        <table name="ContactVehicle">
            <field name="Contact" dbcolumn="contact_id" type="Integer" references="Contact" primaryKey="true" />
            <field name="Vehicle" dbcolumn="vehicle_id" type="Integer" references="Vehicle" />
        </table>
    </relation>

    <relation name="ContactToBike">
        <table name="ContactBike">
            <field name="Contact" dbcolumn="contact_id" type="Integer" references="Contact" primaryKey="true" />
            <field name="Bike" dbcolumn="bike_id" type="Integer" references="Bike" />
        </table>
    </relation>

</schema>
