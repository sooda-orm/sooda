<?xml version="1.0" encoding="utf-8" ?>
<project name="Sooda" default="build" basedir=".">
    <property name="sooda.debug" value="true" unless="${property::exists('sooda.debug')}" />
    <property name="sooda.optimize" value="false" unless="${property::exists('sooda.optimize')}" />
    <property name="sooda.csc.args" value="/nowarn:1591" />
    <property name="sooda.external" value="${project::get-base-directory()}/external" unless="${property::exists('sooda.external')}" />
    <property name="sooda.nlog.dir" value="${sooda.external}" unless="${property::exists('sooda.nlog.dir')}" />
    <property name="sooda.log4net.dir" value="${sooda.external}" unless="${property::exists('sooda.log4net.dir')}" />
    <property name="sooda.query" value="false" unless="${property::exists('sooda.query')}" />

    <property name="boo.home" value="C:\bin\boo\bin" />
    <property name="nemerle.home" value="C:\Program Files (x86)\Nemerle\net-4.0" />

    <property name="sources" value="src" />

    <target name="set-build-net-2.0">
        <property name="nant.settings.currentframework" value="net-2.0" />
    </target>
    <target name="set-build-net-3.5">
        <property name="nant.settings.currentframework" value="net-3.5" />
    </target>
    <target name="set-build-net-4.0">
        <property name="nant.settings.currentframework" value="net-4.0" />
    </target>
    <target name="set-build-netcf-2.0">
        <property name="nant.settings.currentframework" value="netcf-2.0" />
    </target>
    <target name="set-build-mono-2.0">
        <property name="nant.settings.currentframework" value="mono-2.0" />
    </target>
    <target name="set-build-mono-3.5">
        <property name="nant.settings.currentframework" value="mono-3.5" />
    </target>
    <target name="set-build-mono-4.0">
        <property name="nant.settings.currentframework" value="mono-4.0" />
    </target>

    <target name="build" depends="build-${nant.settings.currentframework}" />
    <target name="build-net-2.0" depends="set-build-net-2.0, build-common, tools, Sooda.Web, guitools" />
    <target name="build-net-3.5" depends="set-build-net-3.5, build-common, tools, Sooda.Web, guitools" />
    <target name="build-net-4.0" depends="set-build-net-4.0, build-common, tools, Sooda.Web, guitools" />
    <target name="build-netcf-2.0" depends="set-build-netcf-2.0, build-common" />
    <target name="build-mono-2.0" depends="set-build-mono-2.0, build-common, minitools" />
    <target name="build-mono-3.5" depends="set-build-mono-3.5, build-common, minitools" />
    <target name="build-mono-4.0" depends="set-build-mono-4.0, build-common, minitools" />

    <target name="build-common" depends="configure, libraries" />
    <target name="tools" depends="SoodaStubGen, SoodaSchemaTool, SoodaFixKeygen, SoodaCompileStubs" />
    <target name="guitools" depends="ConfigureSoodaProject">
       <if test="${sooda.query=='true'}">
          <call target="SoodaQuery" />
       </if>
    </target>
    <target name="minitools" depends="SoodaStubGen, SoodaCompileStubs" />

    <target name="libraries" depends="Sooda, Sooda.Logging.NLog, Sooda.Logging.log4net" />

    <target name="update-build-number">
	<!--exec program="git" commandline="show -s - -format=%ci" output="build/Sooda.gitdate" /-->
	<!--loadfile file="build/Sooda.gitdate" property="sooda.version.gitdate" />
	<regex input="${sooda.version.gitdate}" pattern="^\d\d(?'YY'\d\d)-(?'MM'\d\d)-(?'DD'\d\d) (?'hh'\d\d):(?'mm'\d\d)" /-->
	<property name="sooda.version" value="2.17.1130.0000" />

        <loadfile file="build/Sooda.buildversion" property="sooda.oldversion" if="${file::exists('build/Sooda.buildversion')}" />
        <if test="${not(property::exists('sooda.oldversion')) or sooda.version!=string::trim(sooda.oldversion)}">
            <echo message="sooda.version=${sooda.version}" />
            <foreach item="String" in="Sooda,Sooda.CodeGen,SoodaStubGen,SoodaCompileStubs,SoodaFixKeygen,SoodaSchemaTool,SoodaQuery,SoodaAddin.UI" delim="," property="assembly.dir">
                <do>
                    <property name="assemblybuildinfo.cs" value="src/${assembly.dir}/AssemblyBuildInfo.cs" />
                    <echo message="using System.Reflection;
// do not modify this file, it will be automatically regenerated
[assembly: AssemblyVersion(&quot;2.0.0.0&quot;)]
[assembly: AssemblyFileVersion(&quot;${sooda.version}&quot;)]
" file="${assemblybuildinfo.cs}" />
                </do>
            </foreach>
            <echo message="${sooda.version}" file="build/Sooda.buildversion" />
        </if>
    </target>

    <target name="configure">
        <property name="sooda.define" value="NANT" />
        <property name="sooda.optimize" value="false" />
        <property name="sooda.optimize" value="true" unless="${sooda.debug}" />

        <property name="buildsubdir" value="${framework::get-target-framework()}${if(sooda.debug,'-debug','')}" />

        <property name="sooda.dir" value="${project::get-base-directory()}/build/${buildsubdir}/bin" unless="${property::exists('sooda.dir')}" />
        <property name="web.dir" value="build/${buildsubdir}/web" unless="${property::exists('web.dir')}" />

        <mkdir dir="${sooda.dir}" />

        <call target="configure-${nant.settings.currentframework}"
            if="${target::exists('configure-' + nant.settings.currentframework)}" />

        <echo message="basedir:   ${project::get-base-directory()}" />
        <echo message="external:  ${sooda.external}" />
        <echo message="defines:   ${sooda.define}" />
        <echo message="optimize:  ${sooda.optimize}" />
        <echo message="output:    ${sooda.dir}" />
        <echo message="framework: ${framework::get-description(framework::get-target-framework())}" />
    </target>

    <target name="configure-net-2.0">
        <property name="sooda.csc.args" value="/nowarn:1591,1699" />
    </target>

    <target name="configure-net-3.5">
        <property name="sooda.csc.args" value="/nowarn:1591,1699" />
        <property name="sooda.define" value="${sooda.define},DOTNET35" />
    </target>

    <target name="configure-net-4.0">
        <property name="sooda.csc.args" value="/nowarn:1591,1699" />
        <property name="sooda.define" value="${sooda.define},DOTNET35,DOTNET4" />
    </target>

    <target name="configure-mono-2.0">
        <property name="sooda.csc.args" value="/nowarn:1591,1699" />
        <property name="sooda.define" value="${sooda.define},MONO" />
    </target>

    <target name="configure-mono-3.5">
        <property name="sooda.csc.args" value="/nowarn:1591,1699" />
        <property name="sooda.define" value="${sooda.define},MONO,DOTNET35" />
    </target>

    <target name="configure-mono-4.0">
        <property name="sooda.csc.args" value="/nowarn:1591,1699" />
        <property name="sooda.define" value="${sooda.define},MONO,DOTNET35,DOTNET4" />
    </target>

    <target name="release">
        <property name="sooda.debug" value="false" />
        <property name="sooda.optimize" value="true" />
    </target>

    <target name="debug">
        <property name="sooda.debug" value="true" />
        <property name="sooda.optimize" value="false" />
    </target>

    <target name="Sooda" depends="configure, update-build-number" description="Sooda">
        <csc target="library" output="${sooda.dir}/Sooda.dll" doc="${sooda.dir}/Sooda.xml" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="mscorlib.dll" />
                <include name="System.dll" />
                <include name="System.XML.dll" />
                <include name="System.Data.dll" />
                <include name="System.Drawing.dll" />
                <include name="System.Web.dll" />
                <include name="System.Configuration.dll" />
                <include name="System.Data.OracleClient.dll" />
            </references>
            <sources basedir="src/Sooda">
                <include name="**/*.cs" />
            </sources>
            <resources basedir="src/Sooda" prefix="Sooda" dynamicprefix="true">
                <include name="Schema/SoodaSchema.xsd" />
            </resources>
            <arg value="${sooda.csc.args}"/>
        </csc>
    </target>

    <target name="Sooda.Logging.NLog" depends="configure, update-build-number, Sooda, NLog" description="Sooda">
        <csc target="library" output="${sooda.dir}/Sooda.Logging.NLog.dll" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="${sooda.nlog.dir}/NLog.dll" />
            </references>
            <sources basedir="src/Sooda.Logging.NLog">
                <include name="**/*.cs" />
            </sources>
            <arg value="${sooda.csc.args}"/>
        </csc>
    </target>

    <target name="Sooda.Logging.log4net" depends="configure, update-build-number, log4net" description="Sooda">
        <csc target="library" output="${sooda.dir}/Sooda.Logging.log4net.dll" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="${sooda.dir}/log4net.dll" />
                <include name="${sooda.dir}/Sooda.dll" />
            </references>
            <sources basedir="src/Sooda.Logging.log4net">
                <include name="**/*.cs" />
            </sources>
            <arg value="${sooda.csc.args}"/>
        </csc>
    </target>

    <target name="Sooda.Web" depends="configure, update-build-number, Sooda">
        <csc target="library" output="${sooda.dir}/Sooda.Web.dll" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="mscorlib.dll" />
                <include name="System.dll" />
                <include name="System.XML.dll" />
                <include name="System.Data.dll" />
                <include name="System.Drawing.dll" />
                <include name="${sooda.dir}/Sooda.dll" />
            </references>
            <sources basedir="src/Sooda.Web">
                <include name="**/*.cs" />
            </sources>
        </csc>
    </target>

    <target name="Sooda.CodeGen" depends="configure, update-build-number, Sooda">
        <csc target="library" output="${sooda.dir}/Sooda.CodeGen.dll" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="${sooda.dir}/Sooda.dll" />
            </references>
            <sources basedir="src/Sooda.CodeGen">
                <include name="**/*.cs" />
            </sources>
            <resources basedir="src/Sooda.CodeGen" prefix="Sooda.CodeGen" dynamicprefix="true">
                <include name="Templates/**/*" />
                <include name="CDIL/Templates/**/*.cdil" />
                <include name="SoodaProject.xsd" />
            </resources>
            <arg value="${sooda.csc.args}"/>
        </csc>
    </target>

    <target name="SoodaStubGen" depends="configure, update-build-number, Sooda, Sooda.CodeGen">
        <csc target="exe" output="${sooda.dir}/SoodaStubGen.exe" debug="${sooda.debug}" define="${sooda.define},NO_VB,NO_JSCRIPT">
            <references>
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="${sooda.dir}/Sooda.CodeGen.dll" />
            </references>
            <sources basedir="src/SoodaStubGen">
                <include name="**/*.cs" />
            </sources>
            <arg value="${sooda.csc.args}"/>
        </csc>
    </target>

    <target name="SoodaCompileStubs" depends="configure, update-build-number, Sooda">
        <csc target="exe" output="${sooda.dir}/SoodaCompileStubs.exe" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="${sooda.dir}/Sooda.dll" />
            </references>
            <sources basedir="src/SoodaCompileStubs">
                <include name="*.cs" />
            </sources>
            <arg value="${sooda.csc.args}"/>
        </csc>
    </target>

    <target name="SoodaSchemaTool" depends="configure, update-build-number, Sooda">
        <csc target="exe" output="${sooda.dir}/SoodaSchemaTool.exe" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="System.Data.dll" asis="true" />
                <include name="${sooda.dir}/Sooda.dll" />
            </references>
            <sources basedir="src/SoodaSchemaTool">
                <include name="*.cs" />
            </sources>
            <arg value="${sooda.csc.args}"/>
        </csc>
    </target>

    <target name="SoodaQuery" depends="configure, update-build-number, Sooda">
        <copy file="external/ICSharpCode.TextEditor.dll" tofile="${sooda.dir}/ICSharpCode.TextEditor.dll" />
        <csc target="winexe" output="${sooda.dir}/SoodaQuery.exe" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true" win32icon="src/SoodaQuery/App.ico">
            <references>
                <include name="System.Data.dll" asis="true" />
                <include name="System.Data.OracleClient.dll" asis="true" />
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="${sooda.dir}/ICSharpCode.TextEditor.dll" />
            </references>
            <sources basedir="src/SoodaQuery">
                <include name="*.cs" />
            </sources>
            <resources basedir="src/SoodaQuery" prefix="SoodaQuery" dynamicprefix="true">
                <include name="SyntaxModes.xml" />
                <include name="**/*.resx" />
                <include name="**/*.xshd" />
            </resources>
            <arg value="${sooda.csc.args}"/>
        </csc>
    </target>

    <target name="SoodaFixKeygen" depends="configure, update-build-number, Sooda">
        <csc target="exe" output="${sooda.dir}/SoodaFixKeygen.exe" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="System.Data.dll" asis="true" />
                <include name="${sooda.dir}/Sooda.dll" />
            </references>
            <sources basedir="src/SoodaFixKeygen">
                <include name="*.cs" />
            </sources>
            <arg value="${sooda.csc.args}"/>
        </csc>
    </target>

    <target name="ConfigureSoodaProject" depends="configure, update-build-number, SoodaAddin.UI">
        <csc target="winexe" output="${sooda.dir}/ConfigureSoodaProject.exe" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="mscorlib.dll" />
                <include name="System.dll" />
                <include name="System.XML.dll" />
                <include name="System.Data.dll" />
                <include name="System.Drawing.dll" />
                <include name="${sooda.dir}/SoodaAddin.UI.dll" />
            </references>
            <sources basedir="src/ConfigureSoodaProject">
                <include name="**/*.cs" />
            </sources>
            <resources basedir="src/ConfigureSoodaProject" prefix="SoodaAddin.UI" dynamicprefix="true">
                <include name="**/*.resx" />
            </resources>
        </csc>
    </target>

    <target name="SoodaAddin.UI" depends="configure, update-build-number">
        <copy file="external/Interop.SQLDMO.dll" tofile="${sooda.dir}/Interop.SQLDMO.dll" />
        <csc target="library" output="${sooda.dir}/SoodaAddin.UI.dll" debug="${sooda.debug}" define="${sooda.define}" warnaserror="true">
            <references>
                <include name="mscorlib.dll" />
                <include name="System.dll" />
                <include name="System.XML.dll" />
                <include name="System.Data.dll" />
                <include name="System.Drawing.dll" />
                <include name="${sooda.dir}/Interop.SQLDMO.dll" />
            </references>
            <sources basedir="src/SoodaAddin.UI">
                <include name="**/*.cs" />
            </sources>
            <resources basedir="src/SoodaAddin.UI" prefix="SoodaAddin.UI" dynamicprefix="true">
                <include name="**/*.resx" />
            </resources>
        </csc>
    </target>

    <target name="Sooda.NAnt.Tasks" depends="Sooda, Sooda.CodeGen">
        <csc target="library" output="${sooda.dir}/Sooda.NAnt.Tasks.dll" debug="true">
            <references>
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="${sooda.dir}/Sooda.CodeGen.dll" />
                <include name="${nant::get-base-directory()}/NAnt.Core.dll" />
            </references>
            <sources basedir="src/Sooda.NAnt.Tasks">
                <include name="*.cs" />
            </sources>
        </csc>
        <loadtasks assembly="${sooda.dir}/Sooda.NAnt.Tasks.dll" />
    </target>

    <target name="clean" depends="configure" description="Delete *.exe,*.dll,*.pdb and *.exe files from output directory">
        <delete>
            <fileset defaultexcludes="false">
                <include name="SetupSooda.exe" />
                <include name="*.suo" />
                <include name="${sooda.dir}/Sooda*.dll" />
                <include name="${sooda.dir}/Sooda*.exe" />
                <include name="${sooda.dir}/Sooda*.pdb" />
                <include name="${sooda.dir}/Sooda*.xml" />
                <include name="${sooda.dir}/*.tlb" />
                <include name="${sooda.dir}/*.exe.config" />
                <include name="${sooda.dir}/*.exe.manifest" />
                <include name="**/*.tmp" />
                <include name="tests/UnitTestObjects/_Stubs.cs" />
                <include name="tests/UnitTestObjects/_DBSchema.bin" />
                <include name="tests/UnitTestObjects/_DBSchema.xml" />
                <include name="examples/**/_Stubs.cs" />
                <include name="examples/**/_DBSchema.bin" />
                <include name="examples/**/*.csproj.user" />
            </fileset>
        </delete>
        <foreach item="Folder" property="dirname">
            <in>
                <items>
                    <include name="src/**/bin" />
                    <include name="src/**/obj" />
                    <include name="examples/**/bin" />
                    <include name="examples/**/obj" />
                    <include name="tests/**/bin" />
                    <include name="tests/**/obj" />
                </items>
            </in>
            <do>
                <delete dir="${dirname}" />
            </do>
        </foreach>
    </target>

    <target name="contest" depends="ConsoleTest">
        <exec workingdir="bin" program="${sooda.dir}/ConsoleTest.exe" commandline="" />
    </target>

    <target name="nunit" depends="Sooda.UnitTests.TestCases">
        <copy file="tests/TestCases/App.config" tofile="${sooda.dir}/Sooda.UnitTests.TestCases.dll.config" />
        <exec workingdir="${sooda.dir}" program="nunit.exe" commandline="${sooda.dir}/Sooda.UnitTests.TestCases.dll" />
    </target>

    <target name="nunit-console" depends="Sooda.UnitTests.TestCases">
        <copy file="tests/TestCases/App.config" tofile="${sooda.dir}/Sooda.UnitTests.TestCases.dll.config" />
        <exec verbose="true" workingdir="${sooda.dir}" program="nunit-console.exe" commandline="${sooda.dir}/Sooda.UnitTests.TestCases.dll" />
    </target>

    <target name="test" depends="Sooda.UnitTests.TestCases, Sooda.UnitTests.VBObjects">
        <nunit2>
            <formatter type="Plain" />
            <test assemblyname="${sooda.dir}/Sooda.UnitTests.TestCases.dll" appconfig="tests/TestCases/App.config" />
        </nunit2>
    </target>

    <target name="Sooda.UnitTests.BaseObjects" depends="Sooda, Sooda.NAnt.Tasks, SoodaStubGen">
        <sooda-generate-code project="tests/BaseObjects/Sooda.UnitTests.BaseObjects.soodaproject" verbose="true" />

        <csc target="library" output="${sooda.dir}/Sooda.UnitTests.BaseObjects.dll" debug="true" define="${sooda.define}">
            <references>
                <include name="${sooda.dir}/NLog.dll" />
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="System.Data.dll" asis="true" />
            </references>
            <sources basedir="tests/BaseObjects">
                <include name="**/*.cs" />
            </sources>
            <resources basedir="tests/BaseObjects" prefix="Sooda.UnitTests.BaseObjects" dynamicprefix="true">
                <include name="_DBSchema.*" />
            </resources>
        </csc>
    </target>

    <target name="Sooda.UnitTests.BaseObjects.CSharpSeparate" depends="Sooda, Sooda.NAnt.Tasks, SoodaStubGen">
        <sooda-generate-code project="tests/BaseObjects.CSharpSeparate/Sooda.UnitTests.BaseObjects.CSharpSeparate.soodaproject" verbose="true" />

        <csc target="library" output="${sooda.dir}/Sooda.UnitTests.BaseObjects.CSharpSeparate.dll" debug="true">
            <references>
                <include name="${sooda.dir}/NLog.dll" />
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="System.Data.dll" asis="true" />
            </references>
            <sources basedir="tests/BaseObjects.CSharpSeparate">
                <include name="*.cs" />
            </sources>
            <resources basedir="tests/BaseObjects.CSharpSeparate" prefix="Sooda.UnitTests.BaseObjects.CSharpSeparate" dynamicprefix="true">
                <include name="_DBSchema.*" />
            </resources>
        </csc>
    </target>

    <target name="BooTest" depends="Sooda, Sooda.NAnt.Tasks">
        <copy todir="${sooda.dir}">
            <fileset basedir="${boo.home}">
                <include name="Boo.Lang.CodeDom.dll" />
                <include name="Boo.Lang.dll" />
            </fileset>
        </copy>
        <sooda-generate-code project="tests/BaseObjects.Boo/Sooda.UnitTests.BaseObjects.Boo.soodaproject" verbose="true" />

        <loadtasks assembly="${boo.home}\Boo.Nant.Tasks.dll" />
        <booc target="exe" output="${sooda.dir}/Sooda.BooTest.exe" debug="true">
            <references>
                <include name="${sooda.dir}/NLog.dll" />
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="System.Data.dll" asis="true" />
            </references>
            <sources basedir="tests/BaseObjects.Boo">
                <include name="*.boo" />
            </sources>
            <resources basedir="tests/BaseObjects.Boo" prefix="Sooda.UnitTests.BaseObjects.Boo" dynamicprefix="true">
                <include name="_DBSchema.*" />
            </resources>
        </booc>
    </target>

    <target name="Sooda.UnitTests.BaseObjects.JScript" depends="Sooda, Sooda.NAnt.Tasks">
        <sooda-generate-code project="tests/BaseObjects.JScript/Sooda.UnitTests.BaseObjects.JScript.soodaproject" verbose="true" />

        <jsc target="library" output="${sooda.dir}/Sooda.UnitTests.BaseObjects.dll" debug="true">
            <references>
                <include name="${sooda.dir}/NLog.dll" />
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="System.Data.dll" />
                <include name="System.Xml.dll" />
            </references>
            <sources basedir="tests/BaseObjects.JScript">
                <include name="*.js" />
            </sources>
            <resources basedir="tests/BaseObjects.JScript" prefix="Sooda.UnitTests.BaseObjects.JScript" dynamicprefix="true">
                <include name="_DBSchema.*" />
            </resources>
        </jsc>
    </target>

    <target name="Sooda.UnitTests.BaseObjects.Nemerle" depends="Sooda, Sooda.NAnt.Tasks">
        <sooda-generate-code project="tests/BaseObjects.Nemerle/Sooda.UnitTests.BaseObjects.Nemerle.soodaproject" verbose="true" />

        <loadtasks assembly="${nemerle.home}/Nemerle.NAnt.Tasks.dll" />

        <ncc target="library" output="${sooda.dir}/Sooda.UnitTests.BaseObjects.dll" debug="true">
            <references>
                <include name="${sooda.dir}/NLog.dll" />
                <include name="${sooda.dir}/Sooda.dll" />
            </references>
            <sources basedir="tests/BaseObjects.Nemerle">
                <include name="*.n" />
            </sources>
            <resources basedir="tests/BaseObjects.Nemerle" prefix="Sooda.UnitTests.BaseObjects.Nemerle" dynamicprefix="true">
                <include name="_DBSchema.*" />
            </resources>
        </ncc>
    </target>

    <target name="Sooda.UnitTests.BaseObjects.C++" depends="Sooda, Sooda.NAnt.Tasks">
        <sooda-generate-code project="tests/BaseObjects.C++/Sooda.UnitTests.BaseObjects.C++.soodaproject" verbose="true" />
    </target>

    <target name="Sooda.UnitTests.Objects" depends="Sooda, SoodaStubGen, Sooda.UnitTests.BaseObjects">
        <sooda-generate-code project="tests/UnitTestObjects/Sooda.UnitTests.Objects.soodaproject" verbose="true" />

        <csc target="library" output="${sooda.dir}/Sooda.UnitTests.Objects.dll" debug="true">
            <references>
                <include name="${sooda.dir}/NLog.dll" />
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="${sooda.dir}/Sooda.UnitTests.BaseObjects.dll" />
                <include name="System.Data.dll" asis="true" />
            </references>
            <sources basedir="tests/UnitTestObjects">
                <include name="*.cs" />
            </sources>
            <resources basedir="tests/UnitTestObjects" prefix="Sooda.UnitTests.Objects" dynamicprefix="true">
                <include name="_DBSchema.*" />
            </resources>
        </csc>
    </target>

    <target name="Sooda.UnitTests.VBObjects" depends="Sooda, SoodaStubGen, Sooda.UnitTests.BaseObjects">
        <sooda-generate-code project="tests/VBUnitTestObjects/Sooda.UnitTests.VBObjects.soodaproject" verbose="true" />

        <vbc target="library" output="${sooda.dir}/Sooda.UnitTests.VBObjects.dll" debug="true">
            <references>
                <include name="${sooda.dir}/NLog.dll" />
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="${sooda.dir}/Sooda.UnitTests.BaseObjects.dll" />
                <include name="System.Data.dll" asis="true" />
                <include name="System.Xml.dll" asis="true" />
            </references>
            <sources basedir="tests/VBUnitTestObjects">
                <include name="*.vb" />
            </sources>
            <resources basedir="tests/VBUnitTestObjects" prefix="Sooda.UnitTests.Objects" dynamicprefix="true">
                <include name="_DBSchema.*" />
            </resources>
        </vbc>
    </target>

    <target name="Sooda.UnitTests.CppObjects" depends="Sooda.NAnt.Tasks, Sooda, SoodaStubGen, Sooda.UnitTests.BaseObjects">
        <sooda-generate-code project="tests/CppUnitTestObjects/Sooda.UnitTests.CppObjects.soodaproject" verbose="true" />
    </target>

    <target name="Sooda.UnitTests.TestCases" depends="libraries, Sooda.UnitTests.Objects, Sooda.UnitTests.BaseObjects">
        <copy file="${nant::get-base-directory()}/lib/common/2.0/nunit.framework.dll" tofile="${sooda.dir}/nunit.framework.dll" />
        <csc target="library" output="${sooda.dir}/Sooda.UnitTests.TestCases.dll" debug="true" define="${sooda.define}">
            <references>
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="${sooda.dir}/Sooda.UnitTests.BaseObjects.dll" />
                <include name="${sooda.dir}/Sooda.UnitTests.Objects.dll" />
                <include name="${sooda.dir}/nunit.framework.dll" />
                <include name="${sooda.dir}/NLog.dll" />
                <include name="System.Data.dll" asis="true" />
            </references>
            <sources basedir="tests/TestCases">
                <include name="**/*.cs" />
            </sources>
        </csc>
    </target>

    <target name="ConsoleTest" depends="Sooda, Sooda.UnitTests.TestCases">
        <csc target="exe" output="${sooda.dir}/ConsoleTest.exe" debug="true">
            <references>
                <include name="${sooda.dir}/Sooda.dll" />
                <include name="${sooda.dir}/Sooda.UnitTests.BaseObjects.dll" />
                <include name="${sooda.dir}/Sooda.UnitTests.Objects.dll" />
                <include name="${sooda.dir}/Sooda.UnitTests.TestCases.dll" />
                <include name="${sooda.dir}/nunit.framework.dll" />
                <include name="${sooda.dir}/NLog.dll" />
                <include name="System.Data.dll" asis="true" />
            </references>
            <sources basedir="tests/ConsoleTest">
                <include name="*.cs" />
            </sources>
        </csc>
        <copy file="tests/ConsoleTest/App.config" tofile="${sooda.dir}/ConsoleTest.exe.config" />
    </target>

    <target name="dist">
        <property name="sooda.debug" value="false" />
        <property name="sooda.dir" value="bin" />

        <call target="clean" />
        <call target="build" />
    </target>

    <target name="NLog">
        <copy todir="${sooda.dir}">
            <fileset basedir="${sooda.nlog.dir}">
                <include name="NLog*.dll" />
                <include name="NLog*.pdb" />
                <include name="NLog*.xml" />
            </fileset>
        </copy>
    </target>

    <target name="log4net">
        <copy todir="${sooda.dir}">
            <fileset basedir="${sooda.log4net.dir}">
                <include name="log4net.dll" />
            </fileset>
        </copy>
    </target>

    <target name="msbuild">
        <exec program="${framework::get-framework-directory(framework::get-target-framework())}/msbuild.exe" commandline="Sooda.sln" />
    </target>

    <target name="keyfile">
        <exec program="${nant.settings.currentframework.sdkdirectory}/sn.exe" workingdir="${project::get-base-directory()}" commandline="-q -k Sooda.snk"/>
    </target>

    <target name="keyfile-mono">
        <exec program="${nant.settings.currentframework.sdkdirectory}/sn.exe" workingdir="${project::get-base-directory()}" commandline="-q -k Sooda.snk"/>
        <exec program="${nant.settings.currentframework.sdkdirectory}/sn.exe" workingdir="${project::get-base-directory()}" commandline="-q -i Sooda.snk SoodaPublisherKey"/>
    </target>

    <target name="doc" depends="configure, build, website">
        <uptodate property="doc.uptodate">
            <targetfiles basedir="build">
                <include name="Sooda.chm" />
            </targetfiles>
            <sourcefiles>
                <include name="build/doc/*.*" />
                <include name="Sooda.hhp" />
            </sourcefiles>
        </uptodate>
        <if test="${not doc.uptodate}">
            <exec program="C:\Program Files\HTML Help Workshop\hhc.exe" commandline="Sooda.hhp" workingdir="." failonerror="false" />
        </if>
    </target>

    <target name="website" depends="configure">
        <property name="webbuild.dir" value="${web.dir}" />
        <property name="web.buildmode" value="web" />
        <call target="buildwebsite" />
        <copy file="src/Sooda/Schema/SoodaSchema.xsd" tofile="${webbuild.dir}/schemas/SoodaSchema.xsd" />
    </target>

    <target name="buildwebsite" depends="configure">
        <mkdir dir="${webbuild.dir}" />
        <mkdir dir="build\webtmp" />
        <mkdir dir="${webbuild.dir}/examples" />

        <copy todir="${webbuild.dir}">
            <fileset basedir="web">
                <include name="*.css" />
                <include name="*.png" />
                <include name="*.jpg" />
                <include name="*.gif" />
            </fileset>
        </copy>

        <exec program="external/NDocSyntax.exe"
              commandline="-outDir build\webtmp web/*.xml"
              workingdir="." />

        <copy todir="${webbuild.dir}/examples">
            <fileset basedir="examples">
                <include name="**/*" />
            </fileset>
        </copy>

        <style destdir="${webbuild.dir}" style="web/style.xsl">
            <infiles basedir="build\webtmp">
                <include name="*.xml" />
                <exclude name="webmenu.xml" />
            </infiles>
            <parameters>
                <parameter name="file_extension" value="html" />
                <parameter name="mode" value="${web.buildmode}" />
            </parameters>
        </style>

        <mkdir dir="build/doc" />

        <style in="build/webtmp/documentation.xml" out="build/doc/documentation.html" style="web/style.xsl">
            <parameters>
                <parameter name="file_extension" value="html" />
                <parameter name="mode" value="plain" />
            </parameters>
        </style>

        <copy todir="build/doc">
            <fileset basedir="web">
                <include name="rightarrow.gif" />
                <include name="doc*.gif" />
                <include name="doc*.png" />
                <include name="*.css" />
                <include name="sooda.jpg" />
            </fileset>
        </copy>
    </target>

    <target name="sync-vs-projects">
        <csc target="library" output="build/SyncVSProjectItems.dll">
            <sources basedir="tools">
                <include name="SyncVSProjectItems.cs" />
            </sources>
            <references>
                <include name="${nant::get-base-directory()}/NAnt.Core.dll" />
            </references>
        </csc>
        <loadtasks assembly="build/SyncVSProjectItems.dll" />
        <sync-vs-project-items>
            <project-files basedir="src/Sooda">
                <include name="*.csproj" />
                <include name="*.csdproj" />
            </project-files>
            <source-files basedir="src/Sooda">
                <include name="**/*.cs" />
            </source-files>
            <resource-files basedir="src/Sooda">
                <include name="Schema/SoodaSchema.xsd" />
            </resource-files>
        </sync-vs-project-items>
        <sync-vs-project-items>
            <project-files basedir="src/Sooda.CodeGen">
                <include name="*.csproj" />
                <include name="*.csdproj" />
            </project-files>
            <source-files basedir="src/Sooda.CodeGen">
                <include name="**/*.cs" />
            </source-files>
            <resource-files basedir="src/Sooda.CodeGen">
                <include name="Templates/**/*" />
                <include name="CDIL/Templates/**/*.cdil" />
                <include name="SoodaProject.xsd" />
            </resource-files>
        </sync-vs-project-items>
        <sync-vs-project-items>
            <project-files basedir="src/SoodaStubGen">
                <include name="*.csproj" />
                <include name="*.csdproj" />
            </project-files>
            <source-files basedir="src/SoodaStubGen">
                <include name="**/*.cs" />
            </source-files>
        </sync-vs-project-items>
        <sync-vs-project-items>
            <project-files basedir="src/SoodaCompileStubs">
                <include name="*.csproj" />
                <include name="*.csdproj" />
            </project-files>
            <source-files basedir="src/SoodaCompileStubs">
                <include name="**/*.cs" />
            </source-files>
        </sync-vs-project-items>
        <sync-vs-project-items>
            <project-files basedir="src/SoodaSchemaTool">
                <include name="*.csproj" />
                <include name="*.csdproj" />
            </project-files>
            <source-files basedir="src/SoodaSchemaTool">
                <include name="**/*.cs" />
            </source-files>
        </sync-vs-project-items>
        <sync-vs-project-items>
            <project-files basedir="src/SoodaQuery">
                <include name="*.csproj" />
                <include name="*.csdproj" />
            </project-files>
            <source-files basedir="src/SoodaQuery">
                <include name="**/*.cs" />
            </source-files>
        </sync-vs-project-items>
        <sync-vs-project-items>
            <project-files basedir="src/SoodaFixKeygen">
                <include name="*.csproj" />
                <include name="*.csdproj" />
            </project-files>
            <source-files basedir="src/SoodaFixKeygen">
                <include name="**/*.cs" />
            </source-files>
        </sync-vs-project-items>
        <sync-vs-project-items>
            <project-files basedir="tests/TestCases">
                <include name="*.csproj" />
                <include name="*.csdproj" />
            </project-files>
            <source-files basedir="tests/TestCases">
                <include name="**/*.cs" />
            </source-files>
        </sync-vs-project-items>
    </target>
</project>
